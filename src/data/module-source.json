{"terraform-aws-modules/security-group/aws": {"name": "security-group", "url": "https://registry.terraform.io/modules/terraform-aws-modules/security-group/aws", "provider": "aws", "downloads": 646117, "description": "Terraform module which creates EC2-VPC security groups on AWS", "source": "terraform-aws-modules/security-group/aws"}, "terraform-aws-modules/elb/aws": {"name": "elb", "url": "https://registry.terraform.io/modules/terraform-aws-modules/elb/aws", "provider": "aws", "downloads": 280271, "description": "Terraform module which creates ELB resources on AWS", "source": "terraform-aws-modules/elb/aws"}, "terraform-aws-modules/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/terraform-aws-modules/vpc/aws", "provider": "aws", "downloads": 207715, "description": "Terraform module which creates VPC resources on AWS", "source": "terraform-aws-modules/vpc/aws"}, "terraform-aws-modules/rds/aws": {"name": "rds", "url": "https://registry.terraform.io/modules/terraform-aws-modules/rds/aws", "provider": "aws", "downloads": 54494, "description": "Terraform module which creates RDS resources on AWS", "source": "terraform-aws-modules/rds/aws"}, "terraform-aws-modules/autoscaling/aws": {"name": "autoscaling", "url": "https://registry.terraform.io/modules/terraform-aws-modules/autoscaling/aws", "provider": "aws", "downloads": 47896, "description": "Terraform module which creates Auto Scaling resources on AWS", "source": "terraform-aws-modules/autoscaling/aws"}, "terraform-aws-modules/alb/aws": {"name": "alb", "url": "https://registry.terraform.io/modules/terraform-aws-modules/alb/aws", "provider": "aws", "downloads": 43433, "description": "A Terraform module to create an AWS Application Load Balancer (ALB) and associated resources.", "source": "terraform-aws-modules/alb/aws"}, "terraform-aws-modules/iam/aws": {"name": "iam", "url": "https://registry.terraform.io/modules/terraform-aws-modules/iam/aws", "provider": "aws", "downloads": 31926, "description": "Terraform module which creates IAM resources on AWS", "source": "terraform-aws-modules/iam/aws"}, "devops-workflow/boolean/local": {"name": "boolean", "url": "https://registry.terraform.io/modules/devops-workflow/boolean/local", "provider": "local", "downloads": 16281, "description": "Terraform module to simplify and expand boolean use", "source": "devops-workflow/boolean/local"}, "terraform-aws-modules/ec2-instance/aws": {"name": "ec2-instance", "url": "https://registry.terraform.io/modules/terraform-aws-modules/ec2-instance/aws", "provider": "aws", "downloads": 15396, "description": "Terraform module which creates EC2 instance(s) on AWS", "source": "terraform-aws-modules/ec2-instance/aws"}, "jenunifer/rds-aurora/aws": {"name": "rds-aurora", "url": "https://registry.terraform.io/modules/jenunifer/rds-aurora/aws", "provider": "aws", "downloads": 14194, "description": "Creates an Aurora Cluster and its instances in AWS. ", "source": "jenunifer/rds-aurora/aws"}, "cloudposse/route53-alias/aws": {"name": "route53-alias", "url": "https://registry.terraform.io/modules/cloudposse/route53-alias/aws", "provider": "aws", "downloads": 7421, "description": "Terraform Module to Define Vanity Host/Domain (e.g. `brand.com`) as an ALIAS record", "source": "cloudposse/route53-alias/aws"}, "Azure/network/azurerm": {"name": "network", "url": "https://registry.terraform.io/modules/Azure/network/azurerm", "provider": "azurerm", "downloads": 7165, "description": "Terraform Azure RM Module for Network", "source": "Azure/network/azurerm"}, "infrablocks/ecs-service/aws": {"name": "ecs-service", "url": "https://registry.terraform.io/modules/infrablocks/ecs-service/aws", "provider": "aws", "downloads": 4982, "description": "Terraform module for deploying a service to an existing ECS cluster in AWS", "source": "infrablocks/ecs-service/aws"}, "fpco/foundation/aws": {"name": "foundation", "url": "https://registry.terraform.io/modules/fpco/foundation/aws", "provider": "aws", "downloads": 4878, "description": "Establish a solid Foundation on AWS with these modules for Terraform", "source": "fpco/foundation/aws"}, "devops-workflow/ami-ids/aws": {"name": "ami-ids", "url": "https://registry.terraform.io/modules/devops-workflow/ami-ids/aws", "provider": "aws", "downloads": 4772, "description": "Terraform module to lookup AMI IDs", "source": "devops-workflow/ami-ids/aws"}, "Azure/compute/azurerm": {"name": "compute", "url": "https://registry.terraform.io/modules/Azure/compute/azurerm", "provider": "azurerm", "downloads": 4321, "description": "Terraform Azure RM Compute Module", "source": "Azure/compute/azurerm"}, "infrablocks/base-networking/aws": {"name": "base-networking", "url": "https://registry.terraform.io/modules/infrablocks/base-networking/aws", "provider": "aws", "downloads": 4159, "description": "Terraform module for building base networking in AWS", "source": "infrablocks/base-networking/aws"}, "devops-workflow/label/local": {"name": "label", "url": "https://registry.terraform.io/modules/devops-workflow/label/local", "provider": "local", "downloads": 4049, "description": "Terraform module to create consistent naming", "source": "devops-workflow/label/local"}, "terraform-aws-modules/notify-slack/aws": {"name": "notify-slack", "url": "https://registry.terraform.io/modules/terraform-aws-modules/notify-slack/aws", "provider": "aws", "downloads": 3477, "description": "Terraform module which creates SNS topic and Lambda function which sends notifications to Slack", "source": "terraform-aws-modules/notify-slack/aws"}, "infrablocks/ecs-cluster/aws": {"name": "ecs-cluster", "url": "https://registry.terraform.io/modules/infrablocks/ecs-cluster/aws", "provider": "aws", "downloads": 3266, "description": "Terraform module for building an ECS cluster in AWS", "source": "infrablocks/ecs-cluster/aws"}, "terraform-aws-modules/vpn-gateway/aws": {"name": "vpn-gateway", "url": "https://registry.terraform.io/modules/terraform-aws-modules/vpn-gateway/aws", "provider": "aws", "downloads": 3138, "description": "Terraform module which creates VPN gateway resources on AWS", "source": "terraform-aws-modules/vpn-gateway/aws"}, "hashicorp/consul/aws": {"name": "consul", "url": "https://registry.terraform.io/modules/hashicorp/consul/aws", "provider": "aws", "downloads": 3067, "description": "A Terraform Module for how to run Consul on AWS using Terraform and Packer", "source": "hashicorp/consul/aws"}, "GoogleCloudPlatform/nat-gateway/google": {"name": "nat-gateway", "url": "https://registry.terraform.io/modules/GoogleCloudPlatform/nat-gateway/google", "provider": "google", "downloads": 2995, "description": "Modular NAT Gateway on Google Compute Engine for Terraform.", "source": "GoogleCloudPlatform/nat-gateway/google"}, "matti/outputs/shell": {"name": "outputs", "url": "https://registry.terraform.io/modules/matti/outputs/shell", "provider": "shell", "downloads": 2931, "description": "", "source": "matti/outputs/shell"}, "infrablocks/encrypted-bucket/aws": {"name": "encrypted-bucket", "url": "https://registry.terraform.io/modules/infrablocks/encrypted-bucket/aws", "provider": "aws", "downloads": 2583, "description": "A terraform module for creating an encrypted bucket in S3", "source": "infrablocks/encrypted-bucket/aws"}, "coreos/kubernetes/aws": {"name": "kubernetes", "url": "https://registry.terraform.io/modules/coreos/kubernetes/aws", "provider": "aws", "downloads": 2063, "description": "Install a Kubernetes cluster the CoreOS Tectonic Way: HA, self-hosted, RBAC, etcd Operator, and more", "source": "coreos/kubernetes/aws"}, "hashicorp/vault/aws": {"name": "vault", "url": "https://registry.terraform.io/modules/hashicorp/vault/aws", "provider": "aws", "downloads": 1971, "description": "A Terraform Module for how to run Vault on AWS using Terraform and Packer", "source": "hashicorp/vault/aws"}, "riboseinc/codecommit-sqs/aws": {"name": "codecommit-sqs", "url": "https://registry.terraform.io/modules/riboseinc/codecommit-sqs/aws", "provider": "aws", "downloads": 1962, "description": "Terraform module for creating an AWS CodeCommit repo with Trigger for SQS and Queue that works with Jenkins CodeCommit Trigger Plugin", "source": "riboseinc/codecommit-sqs/aws"}, "claranet/aurora/aws": {"name": "aurora", "url": "https://registry.terraform.io/modules/claranet/aurora/aws", "provider": "aws", "downloads": 1782, "description": "Terraform module for creating and managing Amazon Aurora clusters", "source": "claranet/aurora/aws"}, "devops-workflow/lb/aws": {"name": "lb", "url": "https://registry.terraform.io/modules/devops-workflow/lb/aws", "provider": "aws", "downloads": 1780, "description": "A Terraform module to create an AWS new style Load Balancer (ALB/NLB) and associated resources.", "source": "devops-workflow/lb/aws"}, "Smartbrood/ec2-iam-role/aws": {"name": "ec2-iam-role", "url": "https://registry.terraform.io/modules/Smartbrood/ec2-iam-role/aws", "provider": "aws", "downloads": 1737, "description": "Terraform module to create IAM role and instance profile for EC2", "source": "Smartbrood/ec2-iam-role/aws"}, "matti/resource/shell": {"name": "resource", "url": "https://registry.terraform.io/modules/matti/resource/shell", "provider": "shell", "downloads": 1716, "description": "", "source": "matti/resource/shell"}, "claranet/lambda/aws": {"name": "lambda", "url": "https://registry.terraform.io/modules/claranet/lambda/aws", "provider": "aws", "downloads": 1705, "description": "Terraform module for AWS Lambda functions", "source": "claranet/lambda/aws"}, "Azure/network-security-group/azurerm": {"name": "network-security-group", "url": "https://registry.terraform.io/modules/Azure/network-security-group/azurerm", "provider": "azurerm", "downloads": 1688, "description": "Terraform module to create a network security group and assign it to the specified subnet", "source": "Azure/network-security-group/azurerm"}, "jpamies/certificate/aws": {"name": "certificate", "url": "https://registry.terraform.io/modules/jpamies/certificate/aws", "provider": "aws", "downloads": 1671, "description": "Create new certificates on aws using route53 for validation", "source": "jpamies/certificate/aws"}, "GoogleCloudPlatform/sql-db/google": {"name": "sql-db", "url": "https://registry.terraform.io/modules/GoogleCloudPlatform/sql-db/google", "provider": "google", "downloads": 1662, "description": "Modular Cloud SQL database instance for Terraform.", "source": "GoogleCloudPlatform/sql-db/google"}, "scholzj/kubeadm-token/random": {"name": "kubeadm-token", "url": "https://registry.terraform.io/modules/scholzj/kubeadm-token/random", "provider": "random", "downloads": 1471, "description": "Terraform module for generating kubeadm tokens", "source": "scholzj/kubeadm-token/random"}, "infrablocks/classic-load-balancer/aws": {"name": "classic-load-balancer", "url": "https://registry.terraform.io/modules/infrablocks/classic-load-balancer/aws", "provider": "aws", "downloads": 1438, "description": "A Terraform module for building a classic load balancer in AWS.", "source": "infrablocks/classic-load-balancer/aws"}, "devops-workflow/s3-buckets/aws": {"name": "s3-buckets", "url": "https://registry.terraform.io/modules/devops-workflow/s3-buckets/aws", "provider": "aws", "downloads": 1331, "description": "Terraform module to manage AWS S3 buckets", "source": "devops-workflow/s3-buckets/aws"}, "btower-labz/btlabz-pri-sn/aws": {"name": "btlabz-pri-sn", "url": "https://registry.terraform.io/modules/btower-labz/btlabz-pri-sn/aws", "provider": "aws", "downloads": 1287, "description": "BTLabz AWS VPC parts: Private subnet.", "source": "btower-labz/btlabz-pri-sn/aws"}, "ImageIntelligence/cf-asg/aws": {"name": "cf-asg", "url": "https://registry.terraform.io/modules/ImageIntelligence/cf-asg/aws", "provider": "aws", "downloads": 1258, "description": "Terraform ASG using CloudFormation templates", "source": "ImageIntelligence/cf-asg/aws"}, "GoogleCloudPlatform/lb-http/google": {"name": "lb-http", "url": "https://registry.terraform.io/modules/GoogleCloudPlatform/lb-http/google", "provider": "google", "downloads": 1019, "description": "Modular Global HTTP Load Balancer for GCE using forwarding rules.", "source": "GoogleCloudPlatform/lb-http/google"}, "tasdikrahman/network/google": {"name": "network", "url": "https://registry.terraform.io/modules/tasdikrahman/network/google", "provider": "google", "downloads": 968, "description": "Terraform module : GCP : for creation of VPC network ", "source": "tasdikrahman/network/google"}, "infrablocks/ecs-load-balancer/aws": {"name": "ecs-load-balancer", "url": "https://registry.terraform.io/modules/infrablocks/ecs-load-balancer/aws", "provider": "aws", "downloads": 928, "description": "Terraform module for deploying a load balancer to be used by a service in an existing ECS cluster in AWS", "source": "infrablocks/ecs-load-balancer/aws"}, "buildo/cranehost/aws": {"name": "cranehost", "url": "https://registry.terraform.io/modules/buildo/cranehost/aws", "provider": "aws", "downloads": 917, "description": "Terraform module for creating EC2 instances with Docker and Crane installed", "source": "buildo/cranehost/aws"}, "cloudposse/dynamodb-autoscaler/aws": {"name": "dynamodb-autoscaler", "url": "https://registry.terraform.io/modules/cloudposse/dynamodb-autoscaler/aws", "provider": "aws", "downloads": 906, "description": "Terraform module to provision DynamoDB autoscaler", "source": "cloudposse/dynamodb-autoscaler/aws"}, "ovh/publiccloud-network/ovh": {"name": "publiccloud-network", "url": "https://registry.terraform.io/modules/ovh/publiccloud-network/ovh", "provider": "ovh", "downloads": 884, "description": "", "source": "ovh/publiccloud-network/ovh"}, "terraform-aws-modules/sqs/aws": {"name": "sqs", "url": "https://registry.terraform.io/modules/terraform-aws-modules/sqs/aws", "provider": "aws", "downloads": 852, "description": "Terraform module which creates SQS resources on AWS", "source": "terraform-aws-modules/sqs/aws"}, "Azure/loadbalancer/azurerm": {"name": "loadbalancer", "url": "https://registry.terraform.io/modules/Azure/loadbalancer/azurerm", "provider": "azurerm", "downloads": 843, "description": "Terraform Azure RM Module for Load Balancer", "source": "Azure/loadbalancer/azurerm"}, "infrablocks/dns-zones/aws": {"name": "dns-zones", "url": "https://registry.terraform.io/modules/infrablocks/dns-zones/aws", "provider": "aws", "downloads": 838, "description": "Terraform module for creating public private DNS zones", "source": "infrablocks/dns-zones/aws"}, "tasdikrahman/network-subnet/google": {"name": "network-subnet", "url": "https://registry.terraform.io/modules/tasdikrahman/network-subnet/google", "provider": "google", "downloads": 798, "description": "Terraform module : GCP : for creation of subnet inside a VPC network", "source": "tasdikrahman/network-subnet/google"}, "ovh/publiccloud-cfssl/ovh": {"name": "publiccloud-cfssl", "url": "https://registry.terraform.io/modules/ovh/publiccloud-cfssl/ovh", "provider": "ovh", "downloads": 786, "description": "", "source": "ovh/publiccloud-cfssl/ovh"}, "terraformworld/iam-account-password-policy/aws": {"name": "iam-account-password-policy", "url": "https://registry.terraform.io/modules/terraformworld/iam-account-password-policy/aws", "provider": "aws", "downloads": 778, "description": "A simple module for setting up the global IAM account password policy", "source": "terraformworld/iam-account-password-policy/aws"}, "ovh/publiccloud-etcd/ovh": {"name": "publiccloud-etcd", "url": "https://registry.terraform.io/modules/ovh/publiccloud-etcd/ovh", "provider": "ovh", "downloads": 733, "description": "", "source": "ovh/publiccloud-etcd/ovh"}, "claranet/asg-instance-replacement/aws": {"name": "asg-instance-replacement", "url": "https://registry.terraform.io/modules/claranet/asg-instance-replacement/aws", "provider": "aws", "downloads": 731, "description": "Terraform module for AWS ASG instance replacement", "source": "claranet/asg-instance-replacement/aws"}, "btower-labz/btlabz-pub-sn/aws": {"name": "btlabz-pub-sn", "url": "https://registry.terraform.io/modules/btower-labz/btlabz-pub-sn/aws", "provider": "aws", "downloads": 662, "description": "BTLabz AWS VPC parts: Public subnet.", "source": "btower-labz/btlabz-pub-sn/aws"}, "egarbi/es-cluster/aws": {"name": "es-cluster", "url": "https://registry.terraform.io/modules/egarbi/es-cluster/aws", "provider": "aws", "downloads": 645, "description": "Create an elasticsearch domain with VPC support in AWS", "source": "egarbi/es-cluster/aws"}, "claranet/s3-yum-repo/aws": {"name": "s3-yum-repo", "url": "https://registry.terraform.io/modules/claranet/s3-yum-repo/aws", "provider": "aws", "downloads": 628, "description": "Manages a YUM repository in an S3 bucket", "source": "claranet/s3-yum-repo/aws"}, "infrablocks/rds-postgres/aws": {"name": "rds-postgres", "url": "https://registry.terraform.io/modules/infrablocks/rds-postgres/aws", "provider": "aws", "downloads": 627, "description": "", "source": "infrablocks/rds-postgres/aws"}, "Smartbrood/key-pair/aws": {"name": "key-pair", "url": "https://registry.terraform.io/modules/Smartbrood/key-pair/aws", "provider": "aws", "downloads": 616, "description": "Terraform module for importing a SSH public key file into AWS.", "source": "Smartbrood/key-pair/aws"}, "Azure/vnet/azurerm": {"name": "vnet", "url": "https://registry.terraform.io/modules/Azure/vnet/azurerm", "provider": "azurerm", "downloads": 578, "description": "Terraform module to create/provision Azure vnet ", "source": "Azure/vnet/azurerm"}, "anonymint/iam-role/aws": {"name": "iam-role", "url": "https://registry.terraform.io/modules/anonymint/iam-role/aws", "provider": "aws", "downloads": 572, "description": "Terraform module for creating iam role with or without instance profile", "source": "anonymint/iam-role/aws"}, "Smartbrood/security-group/aws": {"name": "security-group", "url": "https://registry.terraform.io/modules/Smartbrood/security-group/aws", "provider": "aws", "downloads": 546, "description": "Terraform module for vpc security groups on AWS", "source": "Smartbrood/security-group/aws"}, "GoogleCloudPlatform/managed-instance-group/google": {"name": "managed-instance-group", "url": "https://registry.terraform.io/modules/GoogleCloudPlatform/managed-instance-group/google", "provider": "google", "downloads": 515, "description": "Modular Google Compute Engine managed instance group for Terraform.", "source": "GoogleCloudPlatform/managed-instance-group/google"}, "egarbi/ecs-service/aws": {"name": "ecs-service", "url": "https://registry.terraform.io/modules/egarbi/ecs-service/aws", "provider": "aws", "downloads": 505, "description": "Create a ECS service in an ECS cluster associated to an target_group passed as an argument", "source": "egarbi/ecs-service/aws"}, "SweetOps/storage-bucket/google": {"name": "storage-bucket", "url": "https://registry.terraform.io/modules/SweetOps/storage-bucket/google", "provider": "google", "downloads": 504, "description": "Terraform module : GCP : for creation storage buckets", "source": "SweetOps/storage-bucket/google"}, "Smartbrood/data-ami/aws": {"name": "data-ami", "url": "https://registry.terraform.io/modules/Smartbrood/data-ami/aws", "provider": "aws", "downloads": 494, "description": "Terraform module to get Ubuntu, Centos, AWS ECS optimized AMI IDs for working region", "source": "Smartbrood/data-ami/aws"}, "salte-io/serverless/aws": {"name": "serverless", "url": "https://registry.terraform.io/modules/salte-io/serverless/aws", "provider": "aws", "downloads": 472, "description": "Terraform Module for simplifying the deployment of Lambda Functions to API Gateway.", "source": "salte-io/serverless/aws"}, "withmethod/repository/github": {"name": "repository", "url": "https://registry.terraform.io/modules/withmethod/repository/github", "provider": "github", "downloads": 463, "description": "Terraform Module for managing Github Repository and Branch Protection resources", "source": "withmethod/repository/github"}, "connect-group/lambda-exec/aws": {"name": "lambda-exec", "url": "https://registry.terraform.io/modules/connect-group/lambda-exec/aws", "provider": "aws", "downloads": 448, "description": "Execute a Lambda and obtain its results during a Terraform apply", "source": "connect-group/lambda-exec/aws"}, "vistaprint/cloudfront-cloudwatch-alarms/aws": {"name": "cloudfront-cloudwatch-alarms", "url": "https://registry.terraform.io/modules/vistaprint/cloudfront-cloudwatch-alarms/aws", "provider": "aws", "downloads": 433, "description": "This Terraform module simplifies creating cloudwatch alarms for a cloudfront distribution.", "source": "vistaprint/cloudfront-cloudwatch-alarms/aws"}, "terraform-aws-modules/eks/aws": {"name": "eks", "url": "https://registry.terraform.io/modules/terraform-aws-modules/eks/aws", "provider": "aws", "downloads": 430, "description": "A Terraform module to create an Elastic Kubernetes (EKS) cluster and associated worker instances on AWS.", "source": "terraform-aws-modules/eks/aws"}, "cloudposse/rds-cluster/aws": {"name": "rds-cluster", "url": "https://registry.terraform.io/modules/cloudposse/rds-cluster/aws", "provider": "aws", "downloads": 404, "description": "Terraform module to provision an RDS Aurora cluster for MySQL or Postgres", "source": "cloudposse/rds-cluster/aws"}, "scholzj/minikube/aws": {"name": "minikube", "url": "https://registry.terraform.io/modules/scholzj/minikube/aws", "provider": "aws", "downloads": 398, "description": "Terraform module for single node Kubernetes instance bootstrapped using kubeadm", "source": "scholzj/minikube/aws"}, "cloudposse/label/null": {"name": "label", "url": "https://registry.terraform.io/modules/cloudposse/label/null", "provider": "null", "downloads": 384, "description": "Terraform Module to define a consistent naming convention by (namespace, stage, name, [attributes])", "source": "cloudposse/label/null"}, "alibaba/security-group/alicloud": {"name": "security-group", "url": "https://registry.terraform.io/modules/alibaba/security-group/alicloud", "provider": "alicloud", "downloads": 375, "description": "Terraform module which creates Security Group and sets rules for it on Alibaba Cloud.", "source": "alibaba/security-group/alicloud"}, "zoitech/account/aws": {"name": "account", "url": "https://registry.terraform.io/modules/zoitech/account/aws", "provider": "aws", "downloads": 355, "description": "Terraform module which setup the most generic aws-accounts settings.", "source": "zoitech/account/aws"}, "coreos/kubernetes/azurerm": {"name": "kubernetes", "url": "https://registry.terraform.io/modules/coreos/kubernetes/azurerm", "provider": "azurerm", "downloads": 350, "description": "Install a Kubernetes cluster the CoreOS Tectonic Way: HA, self-hosted, RBAC, etcd Operator, and more", "source": "coreos/kubernetes/azurerm"}, "kchugalinskiy/assert/null": {"name": "assert", "url": "https://registry.terraform.io/modules/kchugalinskiy/assert/null", "provider": "null", "downloads": 344, "description": "Terraform assertion module", "source": "kchugalinskiy/assert/null"}, "buildo/website/aws": {"name": "website", "url": "https://registry.terraform.io/modules/buildo/website/aws", "provider": "aws", "downloads": 324, "description": "Terraform module for creating static websites hosted on S3 and served via CloudFront", "source": "buildo/website/aws"}, "anoff/functionapp/azurerm": {"name": "functionapp", "url": "https://registry.terraform.io/modules/anoff/functionapp/azurerm", "provider": "azurerm", "downloads": 322, "description": "Deploy a dedicated or consumption based Function App with all dependencies and minimal config", "source": "anoff/functionapp/azurerm"}, "kurron/api-gateway-deployment/aws": {"name": "api-gateway-deployment", "url": "https://registry.terraform.io/modules/kurron/api-gateway-deployment/aws", "provider": "aws", "downloads": 316, "description": "Terraform module that attaches an integration and deployment to established API Gateway resource", "source": "kurron/api-gateway-deployment/aws"}, "terraform-aws-modules/redshift/aws": {"name": "redshift", "url": "https://registry.terraform.io/modules/terraform-aws-modules/redshift/aws", "provider": "aws", "downloads": 312, "description": "Terraform module which creates Redshift resources on AWS", "source": "terraform-aws-modules/redshift/aws"}, "connect-group/rds-finalsnapshot/aws": {"name": "rds-finalsnapshot", "url": "https://registry.terraform.io/modules/connect-group/rds-finalsnapshot/aws", "provider": "aws", "downloads": 312, "description": "Terraform module which manages RDS Final Snapshots (Database and Aurora Cluster)", "source": "connect-group/rds-finalsnapshot/aws"}, "kurron/alb-service-attachment/aws": {"name": "alb-service-attachment", "url": "https://registry.terraform.io/modules/kurron/alb-service-attachment/aws", "provider": "aws", "downloads": 309, "description": "Terraform module that simplifies the process of adding a new port and backing EC2 instances to an ALB.", "source": "kurron/alb-service-attachment/aws"}, "cloudposse/s3-website/aws": {"name": "s3-website", "url": "https://registry.terraform.io/modules/cloudposse/s3-website/aws", "provider": "aws", "downloads": 304, "description": "Terraform Module for Creating S3 backed Websites and Route53 DNS", "source": "cloudposse/s3-website/aws"}, "Azure/computegroup/azurerm": {"name": "computegroup", "url": "https://registry.terraform.io/modules/Azure/computegroup/azurerm", "provider": "azurerm", "downloads": 302, "description": "Terraform Azure RM Compute Group Module", "source": "Azure/computegroup/azurerm"}, "Smartbrood/ec2-instance/aws": {"name": "ec2-instance", "url": "https://registry.terraform.io/modules/Smartbrood/ec2-instance/aws", "provider": "aws", "downloads": 295, "description": "Terraform module to EC2 instance.", "source": "Smartbrood/ec2-instance/aws"}, "kurron/api-gateway-binding/aws": {"name": "api-gateway-binding", "url": "https://registry.terraform.io/modules/kurron/api-gateway-binding/aws", "provider": "aws", "downloads": 287, "description": "Terraform module that attaches a proxy endpoint to an API Gateway", "source": "kurron/api-gateway-binding/aws"}, "devops-workflow/sns-topics/aws": {"name": "sns-topics", "url": "https://registry.terraform.io/modules/devops-workflow/sns-topics/aws", "provider": "aws", "downloads": 285, "description": "Terraform module to manage AWS SNS topics", "source": "devops-workflow/sns-topics/aws"}, "kurron/cloudwatch-log/aws": {"name": "cloudwatch-log", "url": "https://registry.terraform.io/modules/kurron/cloudwatch-log/aws", "provider": "aws", "downloads": 283, "description": "Terraform module that provides a simple CloudWatch Log setup", "source": "kurron/cloudwatch-log/aws"}, "egarbi/target-group-alarms/aws": {"name": "target-group-alarms", "url": "https://registry.terraform.io/modules/egarbi/target-group-alarms/aws", "provider": "aws", "downloads": 283, "description": "This will add basic alarms for ecs services", "source": "egarbi/target-group-alarms/aws"}, "vistaprint/dynamodb-tables/aws": {"name": "dynamodb-tables", "url": "https://registry.terraform.io/modules/vistaprint/dynamodb-tables/aws", "provider": "aws", "downloads": 277, "description": "", "source": "vistaprint/dynamodb-tables/aws"}, "hmarcelodn/acsenginek8scluster/azurerm": {"name": "acsenginek8scluster", "url": "https://registry.terraform.io/modules/hmarcelodn/acsenginek8scluster/azurerm", "provider": "azurerm", "downloads": 271, "description": "Terraform Module to Create Kubernetes cluster using acs-engine", "source": "hmarcelodn/acsenginek8scluster/azurerm"}, "btower-labz/btlabz-vpc-base/aws": {"name": "btlabz-vpc-base", "url": "https://registry.terraform.io/modules/btower-labz/btlabz-vpc-base/aws", "provider": "aws", "downloads": 253, "description": "BTLabz AWS VPC parts: VPC base.", "source": "btower-labz/btlabz-vpc-base/aws"}, "GoogleCloudPlatform/lb/google": {"name": "lb", "url": "https://registry.terraform.io/modules/GoogleCloudPlatform/lb/google", "provider": "google", "downloads": 252, "description": "Modular Regional TCP Load Balancer for GCE using target pool and forwarding rule.", "source": "GoogleCloudPlatform/lb/google"}, "Smartbrood/role-policy/aws": {"name": "role-policy", "url": "https://registry.terraform.io/modules/Smartbrood/role-policy/aws", "provider": "aws", "downloads": 248, "description": "Terraform module/role (role means that module contains other modules) to create some default policy resources.", "source": "Smartbrood/role-policy/aws"}, "kurron/alb-target-group/aws": {"name": "alb-target-group", "url": "https://registry.terraform.io/modules/kurron/alb-target-group/aws", "provider": "aws", "downloads": 241, "description": "Terraform module that sets up a Target Group for an Application Load Balancer", "source": "kurron/alb-target-group/aws"}, "smrutimandal/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/smrutimandal/vpc/aws", "provider": "aws", "downloads": 238, "description": "", "source": "smrutimandal/vpc/aws"}, "jonathanio/s3-cloudfront/module": {"name": "s3-cloudfront", "url": "https://registry.terraform.io/modules/jonathanio/s3-cloudfront/module", "provider": "module", "downloads": 222, "description": "Terraform module which creates a CloudFront-enabled S3 bucket for static website hosting.", "source": "jonathanio/s3-cloudfront/module"}, "azavea/ecs-cluster/aws": {"name": "ecs-cluster", "url": "https://registry.terraform.io/modules/azavea/ecs-cluster/aws", "provider": "aws", "downloads": 221, "description": "A Terraform module to create an Amazon Web Services (AWS) EC2 Container Service (ECS) cluster.", "source": "azavea/ecs-cluster/aws"}, "devops-workflow/security-group/aws": {"name": "security-group", "url": "https://registry.terraform.io/modules/devops-workflow/security-group/aws", "provider": "aws", "downloads": 216, "description": "Terraform module which creates EC2-VPC security groups on AWS", "source": "devops-workflow/security-group/aws"}, "hashicorp/module-installer-acctest/aws": {"name": "module-installer-acctest", "url": "https://registry.terraform.io/modules/hashicorp/module-installer-acctest/aws", "provider": "aws", "downloads": 206, "description": "A placeholder Terraform module for acceptance tests of Terraform's module installer", "source": "hashicorp/module-installer-acctest/aws"}, "sidick/elb-ssl-negotiation/aws": {"name": "elb-ssl-negotiation", "url": "https://registry.terraform.io/modules/sidick/elb-ssl-negotiation/aws", "provider": "aws", "downloads": 204, "description": "Terraform module which creates ELB SSL Negotiation Policy", "source": "sidick/elb-ssl-negotiation/aws"}, "alvin-huang/datadog-integration/aws": {"name": "datadog-integration", "url": "https://registry.terraform.io/modules/alvin-huang/datadog-integration/aws", "provider": "aws", "downloads": 203, "description": "Terraform Module to set up the Datadog AWS Integration", "source": "alvin-huang/datadog-integration/aws"}, "telia-oss/asg/aws": {"name": "asg", "url": "https://registry.terraform.io/modules/telia-oss/asg/aws", "provider": "aws", "downloads": 198, "description": "Autoscaling group module for Terraform", "source": "telia-oss/asg/aws"}, "cloudposse/cloudfront-s3-cdn/aws": {"name": "cloudfront-s3-cdn", "url": "https://registry.terraform.io/modules/cloudposse/cloudfront-s3-cdn/aws", "provider": "aws", "downloads": 186, "description": "Terraform module to easily provision CloudFront CDN backed by an S3 origin", "source": "cloudposse/cloudfront-s3-cdn/aws"}, "scholzj/kubernetes/aws": {"name": "kubernetes", "url": "https://registry.terraform.io/modules/scholzj/kubernetes/aws", "provider": "aws", "downloads": 185, "description": "Terraform module for Kubernetes setup on AWS", "source": "scholzj/kubernetes/aws"}, "cloudowski/config-state/aws": {"name": "config-state", "url": "https://registry.terraform.io/modules/cloudowski/config-state/aws", "provider": "aws", "downloads": 178, "description": "Terraform code to provision terraform state backend on AWS", "source": "cloudowski/config-state/aws"}, "mitchellh/dynamic-keys/aws": {"name": "dynamic-keys", "url": "https://registry.terraform.io/modules/mitchellh/dynamic-keys/aws", "provider": "aws", "downloads": 175, "description": "Terraform module that dynamically generates a public/private keypair.", "source": "mitchellh/dynamic-keys/aws"}, "hashicorp/nomad/aws": {"name": "nomad", "url": "https://registry.terraform.io/modules/hashicorp/nomad/aws", "provider": "aws", "downloads": 173, "description": "A Terraform Module for how to run Nomad on AWS using Terraform and Packer", "source": "hashicorp/nomad/aws"}, "cloudposse/s3-log-storage/aws": {"name": "s3-log-storage", "url": "https://registry.terraform.io/modules/cloudposse/s3-log-storage/aws", "provider": "aws", "downloads": 173, "description": "This module creates an S3 bucket suitable for receiving logs from other AWS services such as S3, CloudFront, and CloudTrails", "source": "cloudposse/s3-log-storage/aws"}, "autonomy/kubernetes/aws": {"name": "kubernetes", "url": "https://registry.terraform.io/modules/autonomy/kubernetes/aws", "provider": "aws", "downloads": 170, "description": "Terraform module for Kubernetes on AWS", "source": "autonomy/kubernetes/aws"}, "tkskwn/ec2-iam-role/aws": {"name": "ec2-iam-role", "url": "https://registry.terraform.io/modules/tkskwn/ec2-iam-role/aws", "provider": "aws", "downloads": 169, "description": "AWS IAM Role module of Terraform.", "source": "tkskwn/ec2-iam-role/aws"}, "mediapop/route53-alias/aws": {"name": "route53-alias", "url": "https://registry.terraform.io/modules/mediapop/route53-alias/aws", "provider": "aws", "downloads": 169, "description": "Simplest way to set up IPv4 and IPv6 aliases.", "source": "mediapop/route53-alias/aws"}, "Smartbrood/vpn/aws": {"name": "vpn", "url": "https://registry.terraform.io/modules/Smartbrood/vpn/aws", "provider": "aws", "downloads": 168, "description": "Terraform module to setup VPN", "source": "Smartbrood/vpn/aws"}, "tiguard/route53-o365/aws": {"name": "route53-o365", "url": "https://registry.terraform.io/modules/tiguard/route53-o365/aws", "provider": "aws", "downloads": 165, "description": "Terraform module to create Office 365 Route53 DNS records", "source": "tiguard/route53-o365/aws"}, "infrablocks/bastion/aws": {"name": "bastion", "url": "https://registry.terraform.io/modules/infrablocks/bastion/aws", "provider": "aws", "downloads": 163, "description": "Terraform module for adding a supervised bastion into an existing network.", "source": "infrablocks/bastion/aws"}, "kurron/bastion/aws": {"name": "bastion", "url": "https://registry.terraform.io/modules/kurron/bastion/aws", "provider": "aws", "downloads": 161, "description": "Terraform module that creates an auto-scaling group of Bastion servers, allowing SSH access to the private EC2 instances", "source": "kurron/bastion/aws"}, "mediapop/certificate/aws": {"name": "certificate", "url": "https://registry.terraform.io/modules/mediapop/certificate/aws", "provider": "aws", "downloads": 156, "description": "Simple way of creating validated certs over multiple domains and zones.", "source": "mediapop/certificate/aws"}, "trussworks/s3-private-bucket/aws": {"name": "s3-private-bucket", "url": "https://registry.terraform.io/modules/trussworks/s3-private-bucket/aws", "provider": "aws", "downloads": 155, "description": "Creates a private, encrypted, versioned S3 bucket with good defaults.", "source": "trussworks/s3-private-bucket/aws"}, "alibaba/vpc/alicloud": {"name": "vpc", "url": "https://registry.terraform.io/modules/alibaba/vpc/alicloud", "provider": "alicloud", "downloads": 153, "description": "Terraform module which creates VPC and Subnet resources on Alibaba Cloud.", "source": "alibaba/vpc/alicloud"}, "infrablocks/ecr-repository/aws": {"name": "ecr-repository", "url": "https://registry.terraform.io/modules/infrablocks/ecr-repository/aws", "provider": "aws", "downloads": 153, "description": "A Terraform module for building an ECR repository in AWS.", "source": "infrablocks/ecr-repository/aws"}, "mediapop/redirect/aws": {"name": "redirect", "url": "https://registry.terraform.io/modules/mediapop/redirect/aws", "provider": "aws", "downloads": 146, "description": "Auto provision HTTPS and IPv6 301 redirects over a batch of hosts.", "source": "mediapop/redirect/aws"}, "Automatic/hedwig-queue-subscription/aws": {"name": "hedwig-queue-subscription", "url": "https://registry.terraform.io/modules/Automatic/hedwig-queue-subscription/aws", "provider": "aws", "downloads": 142, "description": "", "source": "Automatic/hedwig-queue-subscription/aws"}, "Azure/database/azurerm": {"name": "database", "url": "https://registry.terraform.io/modules/Azure/database/azurerm", "provider": "azurerm", "downloads": 140, "description": "Terraform Azure RM Module for Database", "source": "Azure/database/azurerm"}, "otassetti/ami-search/aws": {"name": "ami-search", "url": "https://registry.terraform.io/modules/otassetti/ami-search/aws", "provider": "aws", "downloads": 138, "description": "Terraform module to find the last version of an AWS Ami IDs for working region.", "source": "otassetti/ami-search/aws"}, "cloudposse/vpc-peering/aws": {"name": "vpc-peering", "url": "https://registry.terraform.io/modules/cloudposse/vpc-peering/aws", "provider": "aws", "downloads": 135, "description": "Terraform module to create a peering connection between two VPCs", "source": "cloudposse/vpc-peering/aws"}, "youngfeldt/backend-s3/aws": {"name": "backend-s3", "url": "https://registry.terraform.io/modules/youngfeldt/backend-s3/aws", "provider": "aws", "downloads": 133, "description": "Terraform S3 backend with state locking.", "source": "youngfeldt/backend-s3/aws"}, "andrewsomething/firewall-cloudflare/digitalocean": {"name": "firewall-cloudflare", "url": "https://registry.terraform.io/modules/andrewsomething/firewall-cloudflare/digitalocean", "provider": "digitalocean", "downloads": 129, "description": "Terraform Module for DigitalOcean Firewall + Cloudflare", "source": "andrewsomething/firewall-cloudflare/digitalocean"}, "Smartbrood/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/Smartbrood/vpc/aws", "provider": "aws", "downloads": 128, "description": "Terraform module to create VPC", "source": "Smartbrood/vpc/aws"}, "hashicorp/consul/google": {"name": "consul", "url": "https://registry.terraform.io/modules/hashicorp/consul/google", "provider": "google", "downloads": 127, "description": "A Terraform Module for how to run Consul on Google Cloud using Terraform and Packer", "source": "hashicorp/consul/google"}, "cloudposse/ec2-bastion-server/aws": {"name": "ec2-bastion-server", "url": "https://registry.terraform.io/modules/cloudposse/ec2-bastion-server/aws", "provider": "aws", "downloads": 124, "description": "Terraform Module to define a generic Bastion host with parameterized user_data", "source": "cloudposse/ec2-bastion-server/aws"}, "justincampbell/staticsite/aws": {"name": "staticsite", "url": "https://registry.terraform.io/modules/justincampbell/staticsite/aws", "provider": "aws", "downloads": 121, "description": "Terraform module for an S3 website, logging, and DNSimple records", "source": "justincampbell/staticsite/aws"}, "matti/grid-outputs/kontena": {"name": "grid-outputs", "url": "https://registry.terraform.io/modules/matti/grid-outputs/kontena", "provider": "kontena", "downloads": 121, "description": "", "source": "matti/grid-outputs/kontena"}, "cloudposse/elastic-beanstalk-application/aws": {"name": "elastic-beanstalk-application", "url": "https://registry.terraform.io/modules/cloudposse/elastic-beanstalk-application/aws", "provider": "aws", "downloads": 119, "description": "Terraform Module to define an ElasticBeanstalk Application", "source": "cloudposse/elastic-beanstalk-application/aws"}, "cloudposse/route53-cluster-hostname/aws": {"name": "route53-cluster-hostname", "url": "https://registry.terraform.io/modules/cloudposse/route53-cluster-hostname/aws", "provider": "aws", "downloads": 119, "description": "Terraform Module to define a consistent cluster hostname (to be used with tf_domain)", "source": "cloudposse/route53-cluster-hostname/aws"}, "Automatic/hedwig-topic/aws": {"name": "hedwig-topic", "url": "https://registry.terraform.io/modules/Automatic/hedwig-topic/aws", "provider": "aws", "downloads": 119, "description": "", "source": "Automatic/hedwig-topic/aws"}, "Smartbrood/role-network/aws": {"name": "role-network", "url": "https://registry.terraform.io/modules/Smartbrood/role-network/aws", "provider": "aws", "downloads": 117, "description": "Terraform module/role (role means that module contains other modules) to create network related resources.", "source": "Smartbrood/role-network/aws"}, "GoogleCloudPlatform/lb-internal/google": {"name": "lb-internal", "url": "https://registry.terraform.io/modules/GoogleCloudPlatform/lb-internal/google", "provider": "google", "downloads": 116, "description": "Modular Internal Load Balancer for GCE using forwarding rules.", "source": "GoogleCloudPlatform/lb-internal/google"}, "alibaba/ecs-instance/alicloud": {"name": "ecs-instance", "url": "https://registry.terraform.io/modules/alibaba/ecs-instance/alicloud", "provider": "alicloud", "downloads": 115, "description": "Terraform module which creates ECS instance(s) on Alibaba Cloud.", "source": "alibaba/ecs-instance/alicloud"}, "kurron/ec2/aws": {"name": "ec2", "url": "https://registry.terraform.io/modules/kurron/ec2/aws", "provider": "aws", "downloads": 115, "description": "A Terraform plan that populates an existing VPC with subnets and EC2 instances.", "source": "kurron/ec2/aws"}, "telia-oss/loadbalancer/aws": {"name": "loadbalancer", "url": "https://registry.terraform.io/modules/telia-oss/loadbalancer/aws", "provider": "aws", "downloads": 115, "description": "Load balancer module for Terraform.", "source": "telia-oss/loadbalancer/aws"}, "egarbi/task-definition/aws": {"name": "task-definition", "url": "https://registry.terraform.io/modules/egarbi/task-definition/aws", "provider": "aws", "downloads": 114, "description": "This is a submodule usuful to be called from a service module to create a task-definition", "source": "egarbi/task-definition/aws"}, "nicholasjackson/hashicorp-suite/aws": {"name": "hashicorp-suite", "url": "https://registry.terraform.io/modules/nicholasjackson/hashicorp-suite/aws", "provider": "aws", "downloads": 113, "description": "Terraform module for creating HashiCorp Nomad and Consul clusters", "source": "nicholasjackson/hashicorp-suite/aws"}, "scholzj/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/scholzj/vpc/aws", "provider": "aws", "downloads": 112, "description": "Terraform module for creating s simple Amazon AWS VPC and subnets", "source": "scholzj/vpc/aws"}, "terraform-aws-modules/sns/aws": {"name": "sns", "url": "https://registry.terraform.io/modules/terraform-aws-modules/sns/aws", "provider": "aws", "downloads": 112, "description": "Terraform module which creates SNS resources on AWS", "source": "terraform-aws-modules/sns/aws"}, "kurron/ec2-park/aws": {"name": "ec2-park", "url": "https://registry.terraform.io/modules/kurron/ec2-park/aws", "provider": "aws", "downloads": 112, "description": "Terraform module that starts/stops EC2 instances on a schedule", "source": "kurron/ec2-park/aws"}, "matti/cloud-platform/kontena": {"name": "cloud-platform", "url": "https://registry.terraform.io/modules/matti/cloud-platform/kontena", "provider": "kontena", "downloads": 112, "description": "", "source": "matti/cloud-platform/kontena"}, "devops-workflow/labels/null": {"name": "labels", "url": "https://registry.terraform.io/modules/devops-workflow/labels/null", "provider": "null", "downloads": 109, "description": "Terraform module to create consistent naming for multiple names", "source": "devops-workflow/labels/null"}, "indix/maintenance-lambda/aws": {"name": "maintenance-lambda", "url": "https://registry.terraform.io/modules/indix/maintenance-lambda/aws", "provider": "aws", "downloads": 107, "description": "Terraform module to deploy aws-maintenance-lambda - A lambda function to send alerts (to Slack, HipChat) on AWS maintenance events.", "source": "indix/maintenance-lambda/aws"}, "kurron/alb/aws": {"name": "alb", "url": "https://registry.terraform.io/modules/kurron/alb/aws", "provider": "aws", "downloads": 105, "description": "Terraform module that sets up an Application Load Balancer", "source": "kurron/alb/aws"}, "hashicorp/consul/azurerm": {"name": "consul", "url": "https://registry.terraform.io/modules/hashicorp/consul/azurerm", "provider": "azurerm", "downloads": 104, "description": "A Terraform Module for how to run Consul on AzureRM using Terraform and Packer", "source": "hashicorp/consul/azurerm"}, "kurron/rds-mysql/aws": {"name": "rds-mysql", "url": "https://registry.terraform.io/modules/kurron/rds-mysql/aws", "provider": "aws", "downloads": 103, "description": "A Terraform module that creates a single instance MySQL RDS instance.", "source": "kurron/rds-mysql/aws"}, "google-terraform-modules/kubernetes-engine/google": {"name": "kubernetes-engine", "url": "https://registry.terraform.io/modules/google-terraform-modules/kubernetes-engine/google", "provider": "google", "downloads": 102, "description": "Create a Google Kubernetes Engine cluster", "source": "google-terraform-modules/kubernetes-engine/google"}, "blinkist/airship-ecs-service/aws": {"name": "airship-ecs-service", "url": "https://registry.terraform.io/modules/blinkist/airship-ecs-service/aws", "provider": "aws", "downloads": 102, "description": "Terraform module which creates an ECS Service, IAM roles, Scaling, ALB listener rules.. Fargate & AWSVPC compatible", "source": "blinkist/airship-ecs-service/aws"}, "cloudposse/efs/aws": {"name": "efs", "url": "https://registry.terraform.io/modules/cloudposse/efs/aws", "provider": "aws", "downloads": 101, "description": "Terraform Module to define an EFS Filesystem (aka NFS)", "source": "cloudposse/efs/aws"}, "kurron/api-key/aws": {"name": "api-key", "url": "https://registry.terraform.io/modules/kurron/api-key/aws", "provider": "aws", "downloads": 98, "description": "Terraform module that creates an API Gateway API key, complete with restrictions", "source": "kurron/api-key/aws"}, "cloudposse/elastic-beanstalk-environment/aws": {"name": "elastic-beanstalk-environment", "url": "https://registry.terraform.io/modules/cloudposse/elastic-beanstalk-environment/aws", "provider": "aws", "downloads": 97, "description": "Terraform module to provision an AWS Elastic Beanstalk Environment", "source": "cloudposse/elastic-beanstalk-environment/aws"}, "viceIII/kubernetes/aws": {"name": "kubernetes", "url": "https://registry.terraform.io/modules/viceIII/kubernetes/aws", "provider": "aws", "downloads": 96, "description": "", "source": "viceIII/kubernetes/aws"}, "terraform-aws-modules/rds-aurora/aws": {"name": "rds-aurora", "url": "https://registry.terraform.io/modules/terraform-aws-modules/rds-aurora/aws", "provider": "aws", "downloads": 95, "description": "Terraform module which creates RDS Aurora resources on AWS", "source": "terraform-aws-modules/rds-aurora/aws"}, "bytebugs/aws-sns-email-notification/modules": {"name": "aws-sns-email-notification", "url": "https://registry.terraform.io/modules/bytebugs/aws-sns-email-notification/modules", "provider": "modules", "downloads": 95, "description": "", "source": "bytebugs/aws-sns-email-notification/modules"}, "johnypony3/ec2-spot-instance/aws": {"name": "ec2-spot-instance", "url": "https://registry.terraform.io/modules/johnypony3/ec2-spot-instance/aws", "provider": "aws", "downloads": 93, "description": "Terraform module which creates EC2 spot instance(s) on AWS", "source": "johnypony3/ec2-spot-instance/aws"}, "thojkooi/firewall-rules/digitalocean": {"name": "firewall-rules", "url": "https://registry.terraform.io/modules/thojkooi/firewall-rules/digitalocean", "provider": "digitalocean", "downloads": 93, "description": "Terraform module for DigitalOcean providing a basic firewall rules set", "source": "thojkooi/firewall-rules/digitalocean"}, "blinkist/airship-kms/aws": {"name": "airship-kms", "url": "https://registry.terraform.io/modules/blinkist/airship-kms/aws", "provider": "aws", "downloads": 93, "description": "Simple KMS Module", "source": "blinkist/airship-kms/aws"}, "Smartbrood/s3-bucket/aws": {"name": "s3-bucket", "url": "https://registry.terraform.io/modules/Smartbrood/s3-bucket/aws", "provider": "aws", "downloads": 92, "description": "Terraform module to create S3 bucket on AWS", "source": "Smartbrood/s3-bucket/aws"}, "cloudposse/iam-assumed-roles/aws": {"name": "iam-assumed-roles", "url": "https://registry.terraform.io/modules/cloudposse/iam-assumed-roles/aws", "provider": "aws", "downloads": 91, "description": "Terraform Module for Assumed Roles on AWS with IAM Groups Requiring MFA", "source": "cloudposse/iam-assumed-roles/aws"}, "kurron/api-gateway/aws": {"name": "api-gateway", "url": "https://registry.terraform.io/modules/kurron/api-gateway/aws", "provider": "aws", "downloads": 87, "description": "Terraform module that creates an API gateway that can have services attached to it.", "source": "kurron/api-gateway/aws"}, "npalm/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/npalm/vpc/aws", "provider": "aws", "downloads": 87, "description": "Terraform module for creating a VPC on AWS", "source": "npalm/vpc/aws"}, "amancevice/slack-drive/google": {"name": "slack-drive", "url": "https://registry.terraform.io/modules/amancevice/slack-drive/google", "provider": "google", "downloads": 87, "description": "Terraform module for deploying Slack Drive to Google Cloud", "source": "amancevice/slack-drive/google"}, "traveloka/repository/github": {"name": "repository", "url": "https://registry.terraform.io/modules/traveloka/repository/github", "provider": "github", "downloads": 85, "description": "A Terraform module which creates a github repository with a protected default branch", "source": "traveloka/repository/github"}, "Smartbrood/ecs/aws": {"name": "ecs", "url": "https://registry.terraform.io/modules/Smartbrood/ecs/aws", "provider": "aws", "downloads": 84, "description": "Terraform module to create ECS cluster", "source": "Smartbrood/ecs/aws"}, "claranet/ssm-patch-management/aws": {"name": "ssm-patch-management", "url": "https://registry.terraform.io/modules/claranet/ssm-patch-management/aws", "provider": "aws", "downloads": 82, "description": "Terraform module for AWS SSM Patch Management", "source": "claranet/ssm-patch-management/aws"}, "oracle/compute-instance/opc": {"name": "compute-instance", "url": "https://registry.terraform.io/modules/oracle/compute-instance/opc", "provider": "opc", "downloads": 80, "description": "Terraform Module for creating Oracle Cloud Infrastructure OPC Compute instances", "source": "oracle/compute-instance/opc"}, "azavea/redis-elasticache/aws": {"name": "redis-elasticache", "url": "https://registry.terraform.io/modules/azavea/redis-elasticache/aws", "provider": "aws", "downloads": 79, "description": "A Terraform module to create an Amazon Web Services (AWS) Redis ElastiCache cluster.", "source": "azavea/redis-elasticache/aws"}, "terraform-aws-modules/ecs/aws": {"name": "ecs", "url": "https://registry.terraform.io/modules/terraform-aws-modules/ecs/aws", "provider": "aws", "downloads": 79, "description": "Terraform module which creates AWS ECS resources", "source": "terraform-aws-modules/ecs/aws"}, "viceIII/vpc-nat/aws": {"name": "vpc-nat", "url": "https://registry.terraform.io/modules/viceIII/vpc-nat/aws", "provider": "aws", "downloads": 79, "description": "", "source": "viceIII/vpc-nat/aws"}, "matti/gce-image-upload/google": {"name": "gce-image-upload", "url": "https://registry.terraform.io/modules/matti/gce-image-upload/google", "provider": "google", "downloads": 79, "description": "", "source": "matti/gce-image-upload/google"}, "santi698/ecs-cluster/aws": {"name": "ecs-cluster", "url": "https://registry.terraform.io/modules/santi698/ecs-cluster/aws", "provider": "aws", "downloads": 76, "description": "A Terraform module to create an Amazon Web Services (AWS) EC2 Container Service (ECS) cluster.", "source": "santi698/ecs-cluster/aws"}, "banks/ecs/aws": {"name": "ecs", "url": "https://registry.terraform.io/modules/banks/ecs/aws", "provider": "aws", "downloads": 76, "description": "Ignore this will be deleted soon", "source": "banks/ecs/aws"}, "sjones-sot/remote-state-storage/azurerm": {"name": "remote-state-storage", "url": "https://registry.terraform.io/modules/sjones-sot/remote-state-storage/azurerm", "provider": "azurerm", "downloads": 76, "description": "Terraform module to set up a storage account on Azure and prep it for use as remote state storage", "source": "sjones-sot/remote-state-storage/azurerm"}, "cloudposse/key-pair/aws": {"name": "key-pair", "url": "https://registry.terraform.io/modules/cloudposse/key-pair/aws", "provider": "aws", "downloads": 75, "description": "Terraform Module to Automatically Generate SSH Key Pairs (Public/Private Keys)", "source": "cloudposse/key-pair/aws"}, "westpac-terraform-registry/subscription-base/azurerm": {"name": "subscription-base", "url": "https://registry.terraform.io/modules/westpac-terraform-registry/subscription-base/azurerm", "provider": "azurerm", "downloads": 72, "description": "Base resources to create and peer a subscription", "source": "westpac-terraform-registry/subscription-base/azurerm"}, "neillturner/autospotting/aws": {"name": "autospotting", "url": "https://registry.terraform.io/modules/neillturner/autospotting/aws", "provider": "aws", "downloads": 72, "description": "Automatically convert your existing AutoScaling groups to significantly cheaper spot instances with minimal(often zero) configuration changes", "source": "neillturner/autospotting/aws"}, "infrablocks/vpc-auto-peering/aws": {"name": "vpc-auto-peering", "url": "https://registry.terraform.io/modules/infrablocks/vpc-auto-peering/aws", "provider": "aws", "downloads": 71, "description": "Terraform module for automatically peering VPCs", "source": "infrablocks/vpc-auto-peering/aws"}, "amancevice/group-sms/aws": {"name": "group-sms", "url": "https://registry.terraform.io/modules/amancevice/group-sms/aws", "provider": "aws", "downloads": 71, "description": "Send SMS messages to a group via AWS SNS", "source": "amancevice/group-sms/aws"}, "thojkooi/docker-swarm-mode/digitalocean": {"name": "docker-swarm-mode", "url": "https://registry.terraform.io/modules/thojkooi/docker-swarm-mode/digitalocean", "provider": "digitalocean", "downloads": 70, "description": "Terraform module for provisioning a Docker Swarm mode cluster on DigitalOcean", "source": "thojkooi/docker-swarm-mode/digitalocean"}, "infrablocks/infrastructure-events/aws": {"name": "infrastructure-events", "url": "https://registry.terraform.io/modules/infrablocks/infrastructure-events/aws", "provider": "aws", "downloads": 70, "description": "Terraform module for publishing infrastructure events created by other modules.", "source": "infrablocks/infrastructure-events/aws"}, "matti/stack/kontena": {"name": "stack", "url": "https://registry.terraform.io/modules/matti/stack/kontena", "provider": "kontena", "downloads": 68, "description": "", "source": "matti/stack/kontena"}, "oracle/ip-networks/opc": {"name": "ip-networks", "url": "https://registry.terraform.io/modules/oracle/ip-networks/opc", "provider": "opc", "downloads": 66, "description": "Terraform Module for creating Oracle Cloud Infrastructure OPC IP Neworks", "source": "oracle/ip-networks/opc"}, "birkoff/api-method/aws": {"name": "api-method", "url": "https://registry.terraform.io/modules/birkoff/api-method/aws", "provider": "aws", "downloads": 66, "description": "Terraform module for AWS API Gateway method resource", "source": "birkoff/api-method/aws"}, "Smartbrood/route53-record/aws": {"name": "route53-record", "url": "https://registry.terraform.io/modules/Smartbrood/route53-record/aws", "provider": "aws", "downloads": 65, "description": "Terraform module to create one Route53 DNS record for existing zone.", "source": "Smartbrood/route53-record/aws"}, "matti/glob-outputs/dir": {"name": "glob-outputs", "url": "https://registry.terraform.io/modules/matti/glob-outputs/dir", "provider": "dir", "downloads": 65, "description": "", "source": "matti/glob-outputs/dir"}, "matti/gce-image-to-zonal-disks/google": {"name": "gce-image-to-zonal-disks", "url": "https://registry.terraform.io/modules/matti/gce-image-to-zonal-disks/google", "provider": "google", "downloads": 64, "description": "", "source": "matti/gce-image-to-zonal-disks/google"}, "mewa/apigateway-cors/aws": {"name": "apigateway-cors", "url": "https://registry.terraform.io/modules/mewa/apigateway-cors/aws", "provider": "aws", "downloads": 64, "description": "Terraform module that sets up CORS", "source": "mewa/apigateway-cors/aws"}, "trussworks/logs/aws": {"name": "logs", "url": "https://registry.terraform.io/modules/trussworks/logs/aws", "provider": "aws", "downloads": 63, "description": "Creates and configures an S3 bucket for storing AWS logs.", "source": "trussworks/logs/aws"}, "birkoff/api-gateway/aws": {"name": "api-gateway", "url": "https://registry.terraform.io/modules/birkoff/api-gateway/aws", "provider": "aws", "downloads": 63, "description": "Terraform module for AWS API Gateway resource", "source": "birkoff/api-gateway/aws"}, "hashicorp/vault/azurerm": {"name": "vault", "url": "https://registry.terraform.io/modules/hashicorp/vault/azurerm", "provider": "azurerm", "downloads": 61, "description": "A Terraform Module for how to run Vault on AzureRM using Terraform and Packer", "source": "hashicorp/vault/azurerm"}, "anrim/ecs/aws": {"name": "ecs", "url": "https://registry.terraform.io/modules/anrim/ecs/aws", "provider": "aws", "downloads": 61, "description": "A Terraform module that creates an ECS Docker cluster and services", "source": "anrim/ecs/aws"}, "admintome/elk/aws": {"name": "elk", "url": "https://registry.terraform.io/modules/admintome/elk/aws", "provider": "aws", "downloads": 60, "description": "Terraform module to deploy an Elasticsearch, Logstash, and Kibana server to AWS.", "source": "admintome/elk/aws"}, "blinkist/airship-ecs-cluster/aws": {"name": "airship-ecs-cluster", "url": "https://registry.terraform.io/modules/blinkist/airship-ecs-cluster/aws", "provider": "aws", "downloads": 60, "description": "Terraform module which creates an ECS Cluster with integrated instance scaling and EFS mounting capability", "source": "blinkist/airship-ecs-cluster/aws"}, "mediapop/key/aws": {"name": "key", "url": "https://registry.terraform.io/modules/mediapop/key/aws", "provider": "aws", "downloads": 59, "description": "Local private key to AWS key registration.", "source": "mediapop/key/aws"}, "nicholasjackson/open-faas-nomad/aws": {"name": "open-faas-nomad", "url": "https://registry.terraform.io/modules/nicholasjackson/open-faas-nomad/aws", "provider": "aws", "downloads": 58, "description": "Example Terraform configuration to create OpenFaas on Nomad for AWS ", "source": "nicholasjackson/open-faas-nomad/aws"}, "trussworks/config/aws": {"name": "config", "url": "https://registry.terraform.io/modules/trussworks/config/aws", "provider": "aws", "downloads": 57, "description": "Enables AWS Config and adds managed config rules with good defaults.", "source": "trussworks/config/aws"}, "hashicorp/vault/google": {"name": "vault", "url": "https://registry.terraform.io/modules/hashicorp/vault/google", "provider": "google", "downloads": 56, "description": "A Terraform Module for how to run Vault on Google Cloud using Terraform and Packer", "source": "hashicorp/vault/google"}, "scholzj/tagging-lambda/aws": {"name": "tagging-lambda", "url": "https://registry.terraform.io/modules/scholzj/tagging-lambda/aws", "provider": "aws", "downloads": 56, "description": "AWS Lambda function for tagging resources", "source": "scholzj/tagging-lambda/aws"}, "fillup/hugo-s3-cloudfront/aws": {"name": "hugo-s3-cloudfront", "url": "https://registry.terraform.io/modules/fillup/hugo-s3-cloudfront/aws", "provider": "aws", "downloads": 56, "description": "Terraform module to create S3 bucket and CloudFront distribution for hosting a Hugo site", "source": "fillup/hugo-s3-cloudfront/aws"}, "npalm/ecs-instances/aws": {"name": "ecs-instances", "url": "https://registry.terraform.io/modules/npalm/ecs-instances/aws", "provider": "aws", "downloads": 55, "description": "AWS Terraform module to create ECS cluster instances.", "source": "npalm/ecs-instances/aws"}, "infrablocks/ecs-route53-registration/aws": {"name": "ecs-route53-registration", "url": "https://registry.terraform.io/modules/infrablocks/ecs-route53-registration/aws", "provider": "aws", "downloads": 54, "description": "Route53 DNS registration for ECS services", "source": "infrablocks/ecs-route53-registration/aws"}, "crisboarna/api-gateway-lambda-dynamodb/aws": {"name": "api-gateway-lambda-dynamodb", "url": "https://registry.terraform.io/modules/crisboarna/api-gateway-lambda-dynamodb/aws", "provider": "aws", "downloads": 54, "description": "Terraform module which deploys a serverless HTTP endpoint backed by AWS API Gateway, Lambda & DynamoDB ", "source": "crisboarna/api-gateway-lambda-dynamodb/aws"}, "devops-workflow/efs/aws": {"name": "efs", "url": "https://registry.terraform.io/modules/devops-workflow/efs/aws", "provider": "aws", "downloads": 52, "description": "Terraform Module to define an EFS Filesystem (aka NFS)", "source": "devops-workflow/efs/aws"}, "Aplyca/acm/aws": {"name": "acm", "url": "https://registry.terraform.io/modules/Aplyca/acm/aws", "provider": "aws", "downloads": 52, "description": "Terraform AWS Certificate Manager module", "source": "Aplyca/acm/aws"}, "claranet/asg-instance-alarms/aws": {"name": "asg-instance-alarms", "url": "https://registry.terraform.io/modules/claranet/asg-instance-alarms/aws", "provider": "aws", "downloads": 52, "description": "Manages CloudWatch Alarms for EC2 Instances in ASGs", "source": "claranet/asg-instance-alarms/aws"}, "grem11n/vpc-peering/aws": {"name": "vpc-peering", "url": "https://registry.terraform.io/modules/grem11n/vpc-peering/aws", "provider": "aws", "downloads": 51, "description": "Terraform module to setup VPC peering connection", "source": "grem11n/vpc-peering/aws"}, "birkoff/lambda-function/aws": {"name": "lambda-function", "url": "https://registry.terraform.io/modules/birkoff/lambda-function/aws", "provider": "aws", "downloads": 51, "description": "Terraform module for AWS Lambda Function resource (simple function, manual trigger)", "source": "birkoff/lambda-function/aws"}, "npalm/gitlab-runner/aws": {"name": "gitlab-runner", "url": "https://registry.terraform.io/modules/npalm/gitlab-runner/aws", "provider": "aws", "downloads": 50, "description": "Terraform script for AWS GitLab Runners on Spot Instances", "source": "npalm/gitlab-runner/aws"}, "claranet/eipattach/aws": {"name": "eipattach", "url": "https://registry.terraform.io/modules/claranet/eipattach/aws", "provider": "aws", "downloads": 50, "description": "Automatically attach Elastic IPs to instances", "source": "claranet/eipattach/aws"}, "damacus/s3-logs-bucket/aws": {"name": "s3-logs-bucket", "url": "https://registry.terraform.io/modules/damacus/s3-logs-bucket/aws", "provider": "aws", "downloads": 50, "description": "Terraform module which creates a S3 bucket designed for logging", "source": "damacus/s3-logs-bucket/aws"}, "Automatic/taskhawk-queue/aws": {"name": "taskhawk-queue", "url": "https://registry.terraform.io/modules/Automatic/taskhawk-queue/aws", "provider": "aws", "downloads": 50, "description": "", "source": "Automatic/taskhawk-queue/aws"}, "ketzacoatl/fpc-ops/aws": {"name": "fpc-ops", "url": "https://registry.terraform.io/modules/ketzacoatl/fpc-ops/aws", "provider": "aws", "downloads": 49, "description": "", "source": "ketzacoatl/fpc-ops/aws"}, "Automatic/taskhawk-scheduler/aws": {"name": "taskhawk-scheduler", "url": "https://registry.terraform.io/modules/Automatic/taskhawk-scheduler/aws", "provider": "aws", "downloads": 49, "description": "Custom Terraform module for creating infrastructure for Taskhawk periodic jobs", "source": "Automatic/taskhawk-scheduler/aws"}, "telia-oss/rds-cluster/aws": {"name": "rds-cluster", "url": "https://registry.terraform.io/modules/telia-oss/rds-cluster/aws", "provider": "aws", "downloads": 47, "description": "RDS Cluster module for Terraform", "source": "telia-oss/rds-cluster/aws"}, "thojkooi/docker-swarm-firewall/digitalocean": {"name": "docker-swarm-firewall", "url": "https://registry.terraform.io/modules/thojkooi/docker-swarm-firewall/digitalocean", "provider": "digitalocean", "downloads": 46, "description": "Terraform module to configure Docker Swarm mode firewall rules on DigitalOcean.", "source": "thojkooi/docker-swarm-firewall/digitalocean"}, "devops-workflow/route53-alias/aws": {"name": "route53-alias", "url": "https://registry.terraform.io/modules/devops-workflow/route53-alias/aws", "provider": "aws", "downloads": 46, "description": "Terraform Module to Define Vanity Host/Domain (e.g. `brand.com`) as an ALIAS record", "source": "devops-workflow/route53-alias/aws"}, "telia-oss/concourse/aws": {"name": "concourse", "url": "https://registry.terraform.io/modules/telia-oss/concourse/aws", "provider": "aws", "downloads": 46, "description": "A Terraform module for deploying Concourse CI.", "source": "telia-oss/concourse/aws"}, "Guimove/bastion/aws": {"name": "bastion", "url": "https://registry.terraform.io/modules/Guimove/bastion/aws", "provider": "aws", "downloads": 45, "description": " Terraform module which creates SSH bastion infrastructure on AWS", "source": "Guimove/bastion/aws"}, "dpmerron/s3-static-site-cdn-ssl/aws": {"name": "s3-static-site-cdn-ssl", "url": "https://registry.terraform.io/modules/dpmerron/s3-static-site-cdn-ssl/aws", "provider": "aws", "downloads": 45, "description": "A Terraform Moule to Deploy a HTML static website to an AWS S3 Bucket with CloudFront CDN and SSL Certificates", "source": "dpmerron/s3-static-site-cdn-ssl/aws"}, "amancevice/slack-slash-command/google": {"name": "slack-slash-command", "url": "https://registry.terraform.io/modules/amancevice/slack-slash-command/google", "provider": "google", "downloads": 44, "description": "Generic slash command handler for Slack", "source": "amancevice/slack-slash-command/google"}, "Azure/vmss-cloudinit/azurerm": {"name": "vmss-cloudinit", "url": "https://registry.terraform.io/modules/Azure/vmss-cloudinit/azurerm", "provider": "azurerm", "downloads": 43, "description": "Terraform AzureRM module registry to create a VM Scaleset initialized via cloud-init scripts", "source": "Azure/vmss-cloudinit/azurerm"}, "cloudposse/ecr/aws": {"name": "ecr", "url": "https://registry.terraform.io/modules/cloudposse/ecr/aws", "provider": "aws", "downloads": 43, "description": "Terraform Module to manage Docker Container Registries on AWS ECR", "source": "cloudposse/ecr/aws"}, "kurron/expiring-s3/aws": {"name": "expiring-s3", "url": "https://registry.terraform.io/modules/kurron/expiring-s3/aws", "provider": "aws", "downloads": 42, "description": "Terraform module that creates an S3 bucket that ages out objects.  Great for holding logs.", "source": "kurron/expiring-s3/aws"}, "wpengine/secure-repository/github": {"name": "secure-repository", "url": "https://registry.terraform.io/modules/wpengine/secure-repository/github", "provider": "github", "downloads": 42, "description": "Terraform module for setting up a GitHub review team and branch protections to secure a repo", "source": "wpengine/secure-repository/github"}, "zoitech/network/aws": {"name": "network", "url": "https://registry.terraform.io/modules/zoitech/network/aws", "provider": "aws", "downloads": 41, "description": "This module is intended to be used for configuring an AWS network.", "source": "zoitech/network/aws"}, "JamesBelchamber/s3-301-redirect/aws": {"name": "s3-301-redirect", "url": "https://registry.terraform.io/modules/JamesBelchamber/s3-301-redirect/aws", "provider": "aws", "downloads": 41, "description": "Easily create a 301 redirect using an S3 bucket and a Route53 A record", "source": "JamesBelchamber/s3-301-redirect/aws"}, "egarbi/ecs-worker/aws": {"name": "ecs-worker", "url": "https://registry.terraform.io/modules/egarbi/ecs-worker/aws", "provider": "aws", "downloads": 41, "description": "This is a simple ECS worker service without an LB associated", "source": "egarbi/ecs-worker/aws"}, "Aplyca/rds/aws": {"name": "rds", "url": "https://registry.terraform.io/modules/Aplyca/rds/aws", "provider": "aws", "downloads": 38, "description": "Create AWS RDS Aurora Cluster Resource", "source": "Aplyca/rds/aws"}, "crisboarna/lambda-invoke/aws": {"name": "lambda-invoke", "url": "https://registry.terraform.io/modules/crisboarna/lambda-invoke/aws", "provider": "aws", "downloads": 38, "description": "Terraform AWS Lambda module to create fully flexible, pluggable Lambda modules", "source": "crisboarna/lambda-invoke/aws"}, "kurron/ecs-service/aws": {"name": "ecs-service", "url": "https://registry.terraform.io/modules/kurron/ecs-service/aws", "provider": "aws", "downloads": 37, "description": "Terraform module that realizes an ECS Task Definition, deploying it to a cluster", "source": "kurron/ecs-service/aws"}, "ovh/publiccloud-consul/ovh": {"name": "publiccloud-consul", "url": "https://registry.terraform.io/modules/ovh/publiccloud-consul/ovh", "provider": "ovh", "downloads": 37, "description": "", "source": "ovh/publiccloud-consul/ovh"}, "kurron/archiving-s3/aws": {"name": "archiving-s3", "url": "https://registry.terraform.io/modules/kurron/archiving-s3/aws", "provider": "aws", "downloads": 37, "description": "Terraform module that creates an S3 bucket that moves objects into Glacier after a period of time", "source": "kurron/archiving-s3/aws"}, "silinternational/ecs-asg/aws": {"name": "ecs-asg", "url": "https://registry.terraform.io/modules/silinternational/ecs-asg/aws", "provider": "aws", "downloads": 37, "description": "Terraform Module for creating an ECS cluster and auto-scaling group that scales based on CPU or Memory reservation for the cluster.", "source": "silinternational/ecs-asg/aws"}, "cloudposse/cloudfront-cdn/aws": {"name": "cloudfront-cdn", "url": "https://registry.terraform.io/modules/cloudposse/cloudfront-cdn/aws", "provider": "aws", "downloads": 36, "description": "Terraform Module that implements a CloudFront Distribution (CDN) for a custom origin. ", "source": "cloudposse/cloudfront-cdn/aws"}, "kurron/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/kurron/vpc/aws", "provider": "aws", "downloads": 36, "description": "Opinionated Terraform module that creates a VPC with subnets in all availability zones", "source": "kurron/vpc/aws"}, "samsonov90/event-driven-lambda/aws": {"name": "event-driven-lambda", "url": "https://registry.terraform.io/modules/samsonov90/event-driven-lambda/aws", "provider": "aws", "downloads": 36, "description": "This module allows to deploy AWS Lambda functions with AWS CloudWatch event rules", "source": "samsonov90/event-driven-lambda/aws"}, "amancevice/slack-events/google": {"name": "slack-events", "url": "https://registry.terraform.io/modules/amancevice/slack-events/google", "provider": "google", "downloads": 36, "description": "Publish Slack events to Google Cloud Pub/Sub using Cloud Functions", "source": "amancevice/slack-events/google"}, "Azure/manageddisk/azurerm": {"name": "manageddisk", "url": "https://registry.terraform.io/modules/Azure/manageddisk/azurerm", "provider": "azurerm", "downloads": 35, "description": "Terraform Azure RM Managed Disk Module ", "source": "Azure/manageddisk/azurerm"}, "terraformworld/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/terraformworld/vpc/aws", "provider": "aws", "downloads": 35, "description": "Highly configurable Terraform module which creates VPC resources on AWS", "source": "terraformworld/vpc/aws"}, "birkoff/api-method-mock/aws": {"name": "api-method-mock", "url": "https://registry.terraform.io/modules/birkoff/api-method-mock/aws", "provider": "aws", "downloads": 35, "description": "AWS API Gateway Method MOCK (for jquery requests)", "source": "birkoff/api-method-mock/aws"}, "amancevice/slack-interactive-components/google": {"name": "slack-interactive-components", "url": "https://registry.terraform.io/modules/amancevice/slack-interactive-components/google", "provider": "google", "downloads": 35, "description": "Slack interactive component Cloud Funtion endpoint", "source": "amancevice/slack-interactive-components/google"}, "cloudposse/ansible/null": {"name": "ansible", "url": "https://registry.terraform.io/modules/cloudposse/ansible/null", "provider": "null", "downloads": 34, "description": "Terraform Module to run ansible playbooks", "source": "cloudposse/ansible/null"}, "cloudposse/rds/aws": {"name": "rds", "url": "https://registry.terraform.io/modules/cloudposse/rds/aws", "provider": "aws", "downloads": 34, "description": " Terraform module to provision AWS RDS instances", "source": "cloudposse/rds/aws"}, "kurron/iam/aws": {"name": "iam", "url": "https://registry.terraform.io/modules/kurron/iam/aws", "provider": "aws", "downloads": 34, "description": "Terraform module that creates a set of common IAM roles", "source": "kurron/iam/aws"}, "JamesBelchamber/medium-custom-domain/aws": {"name": "medium-custom-domain", "url": "https://registry.terraform.io/modules/JamesBelchamber/medium-custom-domain/aws", "provider": "aws", "downloads": 34, "description": "Easily add a Medium Custom Domain to your Route53 config.", "source": "JamesBelchamber/medium-custom-domain/aws"}, "viceIII/static-site/aws": {"name": "static-site", "url": "https://registry.terraform.io/modules/viceIII/static-site/aws", "provider": "aws", "downloads": 34, "description": "", "source": "viceIII/static-site/aws"}, "Automatic/hedwig-lambda-subscription/aws": {"name": "hedwig-lambda-subscription", "url": "https://registry.terraform.io/modules/Automatic/hedwig-lambda-subscription/aws", "provider": "aws", "downloads": 34, "description": "", "source": "Automatic/hedwig-lambda-subscription/aws"}, "IGNW/jenkins/aws": {"name": "jenkins", "url": "https://registry.terraform.io/modules/IGNW/jenkins/aws", "provider": "aws", "downloads": 33, "description": "Terraform module to deploy Jenkins Master->Slave cluster on AWS.", "source": "IGNW/jenkins/aws"}, "GMafra/subnet/gcp": {"name": "subnet", "url": "https://registry.terraform.io/modules/GMafra/subnet/gcp", "provider": "gcp", "downloads": 33, "description": " Terraform module for creating Subnets on Google Cloud", "source": "GMafra/subnet/gcp"}, "Automatic/hedwig-queue/aws": {"name": "hedwig-queue", "url": "https://registry.terraform.io/modules/Automatic/hedwig-queue/aws", "provider": "aws", "downloads": 33, "description": "", "source": "Automatic/hedwig-queue/aws"}, "Azure/module-test-jenkins/azurerm": {"name": "module-test-jenkins", "url": "https://registry.terraform.io/modules/Azure/module-test-jenkins/azurerm", "provider": "azurerm", "downloads": 32, "description": "The test infrastructure (Jenkins on Azure VM) to be provisioned for Terraform module testing purpose.", "source": "Azure/module-test-jenkins/azurerm"}, "walked/usergen/aws": {"name": "usergen", "url": "https://registry.terraform.io/modules/walked/usergen/aws", "provider": "aws", "downloads": 32, "description": "Terraform module for generation of AWS user accounts with IAM policy attachments", "source": "walked/usergen/aws"}, "devops-workflow/team-members/github": {"name": "team-members", "url": "https://registry.terraform.io/modules/devops-workflow/team-members/github", "provider": "github", "downloads": 32, "description": "Terraform module to manage Github team members", "source": "devops-workflow/team-members/github"}, "egarbi/static-site/aws": {"name": "static-site", "url": "https://registry.terraform.io/modules/egarbi/static-site/aws", "provider": "aws", "downloads": 30, "description": "Module to create a fully functional static site in AWS based on CloudFront and S3", "source": "egarbi/static-site/aws"}, "odzhu/asg/aws": {"name": "asg", "url": "https://registry.terraform.io/modules/odzhu/asg/aws", "provider": "aws", "downloads": 30, "description": "AWS Auto Scaling Terraform module", "source": "odzhu/asg/aws"}, "eric-gonzales/acm-certificate/aws": {"name": "acm-certificate", "url": "https://registry.terraform.io/modules/eric-gonzales/acm-certificate/aws", "provider": "aws", "downloads": 30, "description": "Terraform module that allows users to query for AWS Certificate Manager (ACM) managed certificates by domain name", "source": "eric-gonzales/acm-certificate/aws"}, "carrete/starterkit-mirror/digitalocean": {"name": "starterkit-mirror", "url": "https://registry.terraform.io/modules/carrete/starterkit-mirror/digitalocean", "provider": "digitalocean", "downloads": 30, "description": "This is only a mirror. Please see the official repository on GitLab.", "source": "carrete/starterkit-mirror/digitalocean"}, "amancevice/slackbot/aws": {"name": "slackbot", "url": "https://registry.terraform.io/modules/amancevice/slackbot/aws", "provider": "aws", "downloads": 30, "description": "API Gateway+Lambda Slackbot", "source": "amancevice/slackbot/aws"}, "Azure/encryptedmanageddisk/azurerm": {"name": "encryptedmanageddisk", "url": "https://registry.terraform.io/modules/Azure/encryptedmanageddisk/azurerm", "provider": "azurerm", "downloads": 29, "description": "Terraform Azure RM Encrypted Managed Disk Module ", "source": "Azure/encryptedmanageddisk/azurerm"}, "kurron/ecs/aws": {"name": "ecs", "url": "https://registry.terraform.io/modules/kurron/ecs/aws", "provider": "aws", "downloads": 29, "description": "Terraform module that creates an ECS cluster, backed by Spot instances", "source": "kurron/ecs/aws"}, "joshuamkite/ssh-bastion-service/aws": {"name": "ssh-bastion-service", "url": "https://registry.terraform.io/modules/joshuamkite/ssh-bastion-service/aws", "provider": "aws", "downloads": 29, "description": "Terraform plan to deploy ssh bastion as a stateless service on AWS", "source": "joshuamkite/ssh-bastion-service/aws"}, "connect-group/ses-dashboard/aws": {"name": "ses-dashboard", "url": "https://registry.terraform.io/modules/connect-group/ses-dashboard/aws", "provider": "aws", "downloads": 29, "description": "This module will create a Deliverability Dashboard that shows information about SES Email bounces and complaints.", "source": "connect-group/ses-dashboard/aws"}, "cloudposse/elasticache-redis/aws": {"name": "elasticache-redis", "url": "https://registry.terraform.io/modules/cloudposse/elasticache-redis/aws", "provider": "aws", "downloads": 27, "description": "Terraform module to provision an ElastiCache Redis Cluster", "source": "cloudposse/elasticache-redis/aws"}, "trussworks/slack-pivotal-tracker-bot/aws": {"name": "slack-pivotal-tracker-bot", "url": "https://registry.terraform.io/modules/trussworks/slack-pivotal-tracker-bot/aws", "provider": "aws", "downloads": 27, "description": "Terraform module for deploying slack-pivotal-tracker-bot to AWS Lambda", "source": "trussworks/slack-pivotal-tracker-bot/aws"}, "russmedia/pubsub/google": {"name": "pubsub", "url": "https://registry.terraform.io/modules/russmedia/pubsub/google", "provider": "google", "downloads": 27, "description": "Terraform module for pub/sub on Google Cloud Platform", "source": "russmedia/pubsub/google"}, "telia-oss/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/telia-oss/vpc/aws", "provider": "aws", "downloads": 27, "description": "VPC module for Terraform", "source": "telia-oss/vpc/aws"}, "azavea/ecs-web-service/aws": {"name": "ecs-web-service", "url": "https://registry.terraform.io/modules/azavea/ecs-web-service/aws", "provider": "aws", "downloads": 26, "description": "A Terraform module to create an Amazon Web Services (AWS) EC2 Container Service (ECS) service associated with an Application Load Balancer (ALB).", "source": "azavea/ecs-web-service/aws"}, "HopeUA/vm/azurerm": {"name": "vm", "url": "https://registry.terraform.io/modules/HopeUA/vm/azurerm", "provider": "azurerm", "downloads": 26, "description": "VM create", "source": "HopeUA/vm/azurerm"}, "thomasbiddle/vpc-peering/aws": {"name": "vpc-peering", "url": "https://registry.terraform.io/modules/thomasbiddle/vpc-peering/aws", "provider": "aws", "downloads": 26, "description": "A Terraform module to configure a VPC Peering connection in AWS.", "source": "thomasbiddle/vpc-peering/aws"}, "isaaguilar/multi-account-peering/aws": {"name": "multi-account-peering", "url": "https://registry.terraform.io/modules/isaaguilar/multi-account-peering/aws", "provider": "aws", "downloads": 26, "description": "Set up a peering connection, auto accept, and add to route tables", "source": "isaaguilar/multi-account-peering/aws"}, "mewa/lambda-alias/aws": {"name": "lambda-alias", "url": "https://registry.terraform.io/modules/mewa/lambda-alias/aws", "provider": "aws", "downloads": 26, "description": "", "source": "mewa/lambda-alias/aws"}, "li0nel/single-page-application/aws": {"name": "single-page-application", "url": "https://registry.terraform.io/modules/li0nel/single-page-application/aws", "provider": "aws", "downloads": 26, "description": "Terraform module which lets you deploy SPAs on AWS using Git Push", "source": "li0nel/single-page-application/aws"}, "anugnes/bastion/aws": {"name": "bastion", "url": "https://registry.terraform.io/modules/anugnes/bastion/aws", "provider": "aws", "downloads": 25, "description": "Terraform module to deploy a bastion host in a custom VPC", "source": "anugnes/bastion/aws"}, "sjones-sot/aks/azurerm": {"name": "aks", "url": "https://registry.terraform.io/modules/sjones-sot/aks/azurerm", "provider": "azurerm", "downloads": 24, "description": "Quickstart module to get Azure AKS (preview) up and running with minimal input", "source": "sjones-sot/aks/azurerm"}, "F1ERCE/backend-s3/aws": {"name": "backend-s3", "url": "https://registry.terraform.io/modules/F1ERCE/backend-s3/aws", "provider": "aws", "downloads": 23, "description": "", "source": "F1ERCE/backend-s3/aws"}, "influxdata/influxdb/aws": {"name": "influxdb", "url": "https://registry.terraform.io/modules/influxdata/influxdb/aws", "provider": "aws", "downloads": 23, "description": "Deploys InfluxDB OSS and Enterprise to AWS", "source": "influxdata/influxdb/aws"}, "Aplyca/elasticsearch/aws": {"name": "elasticsearch", "url": "https://registry.terraform.io/modules/Aplyca/elasticsearch/aws", "provider": "aws", "downloads": 23, "description": "Terraform AWS ElasticSearch domain", "source": "Aplyca/elasticsearch/aws"}, "amancevice/slack-slash-command/aws": {"name": "slack-slash-command", "url": "https://registry.terraform.io/modules/amancevice/slack-slash-command/aws", "provider": "aws", "downloads": 23, "description": "Generic slash command handler for Slack", "source": "amancevice/slack-slash-command/aws"}, "telia-oss/ssm-agent-policy/aws": {"name": "ssm-agent-policy", "url": "https://registry.terraform.io/modules/telia-oss/ssm-agent-policy/aws", "provider": "aws", "downloads": 23, "description": "An IAM policy which grants the necessary permissions to run the SSM agent.", "source": "telia-oss/ssm-agent-policy/aws"}, "azavea/memcached-elasticache/aws": {"name": "memcached-elasticache", "url": "https://registry.terraform.io/modules/azavea/memcached-elasticache/aws", "provider": "aws", "downloads": 22, "description": "A Terraform module to create an Amazon Web Services (AWS) Memcached ElastiCache cluster.", "source": "azavea/memcached-elasticache/aws"}, "moltin/ha/rancher": {"name": "ha", "url": "https://registry.terraform.io/modules/moltin/ha/rancher", "provider": "rancher", "downloads": 22, "description": "Terraform Rancher HA cluster in AWS", "source": "moltin/ha/rancher"}, "matti/service/kontena": {"name": "service", "url": "https://registry.terraform.io/modules/matti/service/kontena", "provider": "kontena", "downloads": 22, "description": "", "source": "matti/service/kontena"}, "bborysenko/gke-node-pool/google": {"name": "gke-node-pool", "url": "https://registry.terraform.io/modules/bborysenko/gke-node-pool/google", "provider": "google", "downloads": 22, "description": "Terraform Module to create Google Kubernetes Engine Node Pool", "source": "bborysenko/gke-node-pool/google"}, "vinaynb/ec2-test/aws": {"name": "ec2-test", "url": "https://registry.terraform.io/modules/vinaynb/ec2-test/aws", "provider": "aws", "downloads": 22, "description": "Testing terraform registry. Provision fleet of EC2 instances distributed across subnets", "source": "vinaynb/ec2-test/aws"}, "traveloka/codebuild-traveloka-backend-release/aws": {"name": "codebuild-traveloka-backend-release", "url": "https://registry.terraform.io/modules/traveloka/codebuild-traveloka-backend-release/aws", "provider": "aws", "downloads": 21, "description": "A Terraform module which provisions a CodeBuild project for traveloka's java builds", "source": "traveloka/codebuild-traveloka-backend-release/aws"}, "Chhed13/sns-to-slack/aws": {"name": "sns-to-slack", "url": "https://registry.terraform.io/modules/Chhed13/sns-to-slack/aws", "provider": "aws", "downloads": 20, "description": "", "source": "Chhed13/sns-to-slack/aws"}, "Smartbrood/efs/aws": {"name": "efs", "url": "https://registry.terraform.io/modules/Smartbrood/efs/aws", "provider": "aws", "downloads": 20, "description": "Terraform module to create EFS volume and mount targets", "source": "Smartbrood/efs/aws"}, "sjones-sot/database-for-postgres/azurerm": {"name": "database-for-postgres", "url": "https://registry.terraform.io/modules/sjones-sot/database-for-postgres/azurerm", "provider": "azurerm", "downloads": 20, "description": "Terraform module for creation of a Azure Database for Postgres", "source": "sjones-sot/database-for-postgres/azurerm"}, "brantburnett/autoscaling-route53-srv/aws": {"name": "autoscaling-route53-srv", "url": "https://registry.terraform.io/modules/brantburnett/autoscaling-route53-srv/aws", "provider": "aws", "downloads": 20, "description": "Manages a Route 53 DNS SRV record to refer to all servers in a set of auto scaling groups", "source": "brantburnett/autoscaling-route53-srv/aws"}, "Automatic/taskhawk-lambda/aws": {"name": "taskhawk-lambda", "url": "https://registry.terraform.io/modules/Automatic/taskhawk-lambda/aws", "provider": "aws", "downloads": 20, "description": "", "source": "Automatic/taskhawk-lambda/aws"}, "amancevice/slackbot-sns/aws": {"name": "slackbot-sns", "url": "https://registry.terraform.io/modules/amancevice/slackbot-sns/aws", "provider": "aws", "downloads": 20, "description": "Forward messages sent to SNS through your Slack bot", "source": "amancevice/slackbot-sns/aws"}, "kurron/security-groups/aws": {"name": "security-groups", "url": "https://registry.terraform.io/modules/kurron/security-groups/aws", "provider": "aws", "downloads": 19, "description": "Terraform module that creates a set of common security groups", "source": "kurron/security-groups/aws"}, "anonymint/ecs-service/aws": {"name": "ecs-service", "url": "https://registry.terraform.io/modules/anonymint/ecs-service/aws", "provider": "aws", "downloads": 19, "description": "Terraform module to create ECS service and tasks running multiple containers per instances with dynamic ports and surface via ALB", "source": "anonymint/ecs-service/aws"}, "GMafra/vpc/gcp": {"name": "vpc", "url": "https://registry.terraform.io/modules/GMafra/vpc/gcp", "provider": "gcp", "downloads": 19, "description": "Terraform module for creating VPCs on Google Cloud", "source": "GMafra/vpc/gcp"}, "anugnes/ecs-scalable-cluster/aws": {"name": "ecs-scalable-cluster", "url": "https://registry.terraform.io/modules/anugnes/ecs-scalable-cluster/aws", "provider": "aws", "downloads": 18, "description": "Terraform module to deploy an Amazon ECS cluster using autoscaling groups", "source": "anugnes/ecs-scalable-cluster/aws"}, "kurron/batch-job-trigger/aws": {"name": "batch-job-trigger", "url": "https://registry.terraform.io/modules/kurron/batch-job-trigger/aws", "provider": "aws", "downloads": 18, "description": "A Terraform module that combines a CloudWatch Event with a Python Lamba that issues a POST request on a schedule.", "source": "kurron/batch-job-trigger/aws"}, "cloudposse/tfstate-backend/aws": {"name": "tfstate-backend", "url": "https://registry.terraform.io/modules/cloudposse/tfstate-backend/aws", "provider": "aws", "downloads": 18, "description": "Provision an S3 bucket to store terraform.tfstate file and a DynamoDB table to lock the state file to prevent concurrent modifications and state corruption", "source": "cloudposse/tfstate-backend/aws"}, "tasdikrahman/network-firewall/google": {"name": "network-firewall", "url": "https://registry.terraform.io/modules/tasdikrahman/network-firewall/google", "provider": "google", "downloads": 17, "description": "Terraform module : GCP : for creation of firewall rules inside the VPC", "source": "tasdikrahman/network-firewall/google"}, "npalm/ecs-service/aws": {"name": "ecs-service", "url": "https://registry.terraform.io/modules/npalm/ecs-service/aws", "provider": "aws", "downloads": 17, "description": "Terraform module to create ECS / FARGATE services", "source": "npalm/ecs-service/aws"}, "brantburnett/couchbase/aws": {"name": "couchbase", "url": "https://registry.terraform.io/modules/brantburnett/couchbase/aws", "provider": "aws", "downloads": 17, "description": "Creates a complete Couchbase cluster in AWS, with support for Multidimensional Scaling", "source": "brantburnett/couchbase/aws"}, "neillturner/lambda-scheduler/aws": {"name": "lambda-scheduler", "url": "https://registry.terraform.io/modules/neillturner/lambda-scheduler/aws", "provider": "aws", "downloads": 17, "description": "Stop and start EC2 and RDS instances according to schedule via lambda and terraform", "source": "neillturner/lambda-scheduler/aws"}, "kickin6/network-peering-full/google": {"name": "network-peering-full", "url": "https://registry.terraform.io/modules/kickin6/network-peering-full/google", "provider": "google", "downloads": 17, "description": "Modular Network Peering Two Projects on Google Compute Engine for Terraform.", "source": "kickin6/network-peering-full/google"}, "terraform-aws-modules/atlantis/aws": {"name": "atlantis", "url": "https://registry.terraform.io/modules/terraform-aws-modules/atlantis/aws", "provider": "aws", "downloads": 17, "description": "Terraform configurations for running Atlantis on AWS Fargate", "source": "terraform-aws-modules/atlantis/aws"}, "hashicorp/nomad/google": {"name": "nomad", "url": "https://registry.terraform.io/modules/hashicorp/nomad/google", "provider": "google", "downloads": 16, "description": "A Terraform Module for how to run Nomad on Google Cloud using Terraform and Packer", "source": "hashicorp/nomad/google"}, "hashicorp/nomad/azurerm": {"name": "nomad", "url": "https://registry.terraform.io/modules/hashicorp/nomad/azurerm", "provider": "azurerm", "downloads": 16, "description": "A Terraform Module for how to run Nomad on AzureRM using Terraform and Packer", "source": "hashicorp/nomad/azurerm"}, "poseidon/kubernetes/aws": {"name": "kubernetes", "url": "https://registry.terraform.io/modules/poseidon/kubernetes/aws", "provider": "aws", "downloads": 16, "description": "Typhoon AWS - minimal and free Kubernetes (mirror)", "source": "poseidon/kubernetes/aws"}, "cloudposse/dynamodb/aws": {"name": "dynamodb", "url": "https://registry.terraform.io/modules/cloudposse/dynamodb/aws", "provider": "aws", "downloads": 16, "description": "Terraform module that implements AWS DynamoDB with support for AutoScaling", "source": "cloudposse/dynamodb/aws"}, "cloudposse/acm-request-certificate/aws": {"name": "acm-request-certificate", "url": "https://registry.terraform.io/modules/cloudposse/acm-request-certificate/aws", "provider": "aws", "downloads": 16, "description": "Terraform module to request an ACM certificate for a domain name and create a CNAME record in the DNZ zone to complete certificate validation", "source": "cloudposse/acm-request-certificate/aws"}, "nephosolutions/gcp-project/google": {"name": "gcp-project", "url": "https://registry.terraform.io/modules/nephosolutions/gcp-project/google", "provider": "google", "downloads": 16, "description": "Terraform module to provision Google Cloud Platform projects", "source": "nephosolutions/gcp-project/google"}, "alibaba/slb/alicloud": {"name": "slb", "url": "https://registry.terraform.io/modules/alibaba/slb/alicloud", "provider": "alicloud", "downloads": 15, "description": "Terraform module which creates Load balancer and set HTTP, HTTPS, TCP, and UDP listeners for it on Alibaba Cloud.", "source": "alibaba/slb/alicloud"}, "deanwilson/github-ssh-keys/aws": {"name": "github-ssh-keys", "url": "https://registry.terraform.io/modules/deanwilson/github-ssh-keys/aws", "provider": "aws", "downloads": 15, "description": "Use your GitHub SSH public key as an AWS EC2 key pair", "source": "deanwilson/github-ssh-keys/aws"}, "birkoff/lambda-scheduled-function/aws": {"name": "lambda-scheduled-function", "url": "https://registry.terraform.io/modules/birkoff/lambda-scheduled-function/aws", "provider": "aws", "downloads": 15, "description": "Terraform module for AWS Lambda scheduled functions", "source": "birkoff/lambda-scheduled-function/aws"}, "Aplyca/route53/aws": {"name": "route53", "url": "https://registry.terraform.io/modules/Aplyca/route53/aws", "provider": "aws", "downloads": 15, "description": "Terraform AWS Route53 module.  Create a Route53 zone and dns records", "source": "Aplyca/route53/aws"}, "erikvanbrakel/anthology/aws": {"name": "anthology", "url": "https://registry.terraform.io/modules/erikvanbrakel/anthology/aws", "provider": "aws", "downloads": 15, "description": "Terraform Module which creates a private Terraform Registry using https://github.com/erikvanbrakel/Anthology.", "source": "erikvanbrakel/anthology/aws"}, "sl1pm4t/redis/kubernetes": {"name": "redis", "url": "https://registry.terraform.io/modules/sl1pm4t/redis/kubernetes", "provider": "kubernetes", "downloads": 15, "description": "Terraform module for deploying redis to Kubernetes", "source": "sl1pm4t/redis/kubernetes"}, "anonymint/ecs-cluster/aws": {"name": "ecs-cluster", "url": "https://registry.terraform.io/modules/anonymint/ecs-cluster/aws", "provider": "aws", "downloads": 14, "description": "Terraform script to create ECS cluster", "source": "anonymint/ecs-cluster/aws"}, "ovh/publiccloud-docker-swarm/ovh": {"name": "publiccloud-docker-swarm", "url": "https://registry.terraform.io/modules/ovh/publiccloud-docker-swarm/ovh", "provider": "ovh", "downloads": 14, "description": "", "source": "ovh/publiccloud-docker-swarm/ovh"}, "javilac/s3/aws": {"name": "s3", "url": "https://registry.terraform.io/modules/javilac/s3/aws", "provider": "aws", "downloads": 14, "description": "Terraform module, provides s3 resources.", "source": "javilac/s3/aws"}, "matti/until/tcp": {"name": "until", "url": "https://registry.terraform.io/modules/matti/until/tcp", "provider": "tcp", "downloads": 14, "description": "", "source": "matti/until/tcp"}, "sacloud/server/sakuracloud": {"name": "server", "url": "https://registry.terraform.io/modules/sacloud/server/sakuracloud", "provider": "sakuracloud", "downloads": 14, "description": "Terraform module for provisioning server instance", "source": "sacloud/server/sakuracloud"}, "azavea/postgresql-rds/aws": {"name": "postgresql-rds", "url": "https://registry.terraform.io/modules/azavea/postgresql-rds/aws", "provider": "aws", "downloads": 13, "description": "A Terraform module to create an Amazon Web Services (AWS) PostgreSQL Relational Database Server (RDS).", "source": "azavea/postgresql-rds/aws"}, "metadevpro/sqlserver-seed/azurerm": {"name": "sqlserver-seed", "url": "https://registry.terraform.io/modules/metadevpro/sqlserver-seed/azurerm", "provider": "azurerm", "downloads": 13, "description": "Terraform module for creating an Azure SQL Server Database and initialize it with a SQL script.", "source": "metadevpro/sqlserver-seed/azurerm"}, "matti/until/shell": {"name": "until", "url": "https://registry.terraform.io/modules/matti/until/shell", "provider": "shell", "downloads": 13, "description": "", "source": "matti/until/shell"}, "jdpleiness/storage-static-website/google": {"name": "storage-static-website", "url": "https://registry.terraform.io/modules/jdpleiness/storage-static-website/google", "provider": "google", "downloads": 13, "description": "A Terraform Module for a static website hosted on Google Cloud Storage", "source": "jdpleiness/storage-static-website/google"}, "matti/yaml/map": {"name": "yaml", "url": "https://registry.terraform.io/modules/matti/yaml/map", "provider": "map", "downloads": 13, "description": "", "source": "matti/yaml/map"}, "matti/map-picker/list": {"name": "map-picker", "url": "https://registry.terraform.io/modules/matti/map-picker/list", "provider": "list", "downloads": 13, "description": "", "source": "matti/map-picker/list"}, "newcontext-oss/instance/google": {"name": "instance", "url": "https://registry.terraform.io/modules/newcontext-oss/instance/google", "provider": "google", "downloads": 13, "description": "Terraform module which creates a Google compute instance within the default networking of an existing project", "source": "newcontext-oss/instance/google"}, "julienlevasseur/security-group/openstack": {"name": "security-group", "url": "https://registry.terraform.io/modules/julienlevasseur/security-group/openstack", "provider": "openstack", "downloads": 12, "description": "Terraform OpenStack Security Group Module", "source": "julienlevasseur/security-group/openstack"}, "cloudposse/cloudwatch-flow-logs/aws": {"name": "cloudwatch-flow-logs", "url": "https://registry.terraform.io/modules/cloudposse/cloudwatch-flow-logs/aws", "provider": "aws", "downloads": 12, "description": "", "source": "cloudposse/cloudwatch-flow-logs/aws"}, "matti/download/http": {"name": "download", "url": "https://registry.terraform.io/modules/matti/download/http", "provider": "http", "downloads": 12, "description": "", "source": "matti/download/http"}, "devops-workflow/teams/github": {"name": "teams", "url": "https://registry.terraform.io/modules/devops-workflow/teams/github", "provider": "github", "downloads": 12, "description": "Terraform module for managing Github teams", "source": "devops-workflow/teams/github"}, "alexandarp/wordpress/digitalocean": {"name": "wordpress", "url": "https://registry.terraform.io/modules/alexandarp/wordpress/digitalocean", "provider": "digitalocean", "downloads": 12, "description": "Lunch a WordPress Droplet with 1 command", "source": "alexandarp/wordpress/digitalocean"}, "google-terraform-modules/cloudsql-ha/google": {"name": "cloudsql-ha", "url": "https://registry.terraform.io/modules/google-terraform-modules/cloudsql-ha/google", "provider": "google", "downloads": 12, "description": "Create Google CloudSQL HA (RR)", "source": "google-terraform-modules/cloudsql-ha/google"}, "jeromegamez/enforce-mfa/aws": {"name": "enforce-mfa", "url": "https://registry.terraform.io/modules/jeromegamez/enforce-mfa/aws", "provider": "aws", "downloads": 12, "description": "A terraform module to enforce MFA for AWS groups and users", "source": "jeromegamez/enforce-mfa/aws"}, "howdio/eks/aws": {"name": "eks", "url": "https://registry.terraform.io/modules/howdio/eks/aws", "provider": "aws", "downloads": 12, "description": "Terraform module which creates EKS resources on AWS", "source": "howdio/eks/aws"}, "anugnes/openvpn/aws": {"name": "openvpn", "url": "https://registry.terraform.io/modules/anugnes/openvpn/aws", "provider": "aws", "downloads": 11, "description": "Terraform module to deploy an OpenVPN EC2 instance in a custom VPC", "source": "anugnes/openvpn/aws"}, "matti/compute-instance/google": {"name": "compute-instance", "url": "https://registry.terraform.io/modules/matti/compute-instance/google", "provider": "google", "downloads": 11, "description": "", "source": "matti/compute-instance/google"}, "kurron/elasticache-redis/aws": {"name": "elasticache-redis", "url": "https://registry.terraform.io/modules/kurron/elasticache-redis/aws", "provider": "aws", "downloads": 11, "description": "Terraform module that creates a Redis-based ElastiCache instance.", "source": "kurron/elasticache-redis/aws"}, "gearnode/get-secret/kubernetes": {"name": "get-secret", "url": "https://registry.terraform.io/modules/gearnode/get-secret/kubernetes", "provider": "kubernetes", "downloads": 11, "description": "Terraform module to get value in Kubernetes secrets store", "source": "gearnode/get-secret/kubernetes"}, "devops-workflow/members/github": {"name": "members", "url": "https://registry.terraform.io/modules/devops-workflow/members/github", "provider": "github", "downloads": 11, "description": "Terraform module to manage Github organization members", "source": "devops-workflow/members/github"}, "10thmagnitude/consul/azurerm": {"name": "consul", "url": "https://registry.terraform.io/modules/10thmagnitude/consul/azurerm", "provider": "azurerm", "downloads": 11, "description": "A Terraform Module for how to run Consul on AzureRM using Terraform and Packer", "source": "10thmagnitude/consul/azurerm"}, "akshaykarle/mongodbatlas/provider": {"name": "mongodbatlas", "url": "https://registry.terraform.io/modules/akshaykarle/mongodbatlas/provider", "provider": "provider", "downloads": 11, "description": "Terraform provider for MongoDB Atlas", "source": "akshaykarle/mongodbatlas/provider"}, "amancevice/slack-sms/aws": {"name": "slack-sms", "url": "https://registry.terraform.io/modules/amancevice/slack-sms/aws", "provider": "aws", "downloads": 11, "description": "Send group SMS messages from Slack slash commands", "source": "amancevice/slack-sms/aws"}, "terraform-aws-modules/customer-gateway/aws": {"name": "customer-gateway", "url": "https://registry.terraform.io/modules/terraform-aws-modules/customer-gateway/aws", "provider": "aws", "downloads": 10, "description": "Terraform module which creates Customer Gateway and other resources necessary to configure a VPN Connection on AWS", "source": "terraform-aws-modules/customer-gateway/aws"}, "trung/ec2-instance-simple/aws": {"name": "ec2-instance-simple", "url": "https://registry.terraform.io/modules/trung/ec2-instance-simple/aws", "provider": "aws", "downloads": 10, "description": "Provision fleet of EC2 instances distributed across subnets", "source": "trung/ec2-instance-simple/aws"}, "ipolyzos/acs/azurerm": {"name": "acs", "url": "https://registry.terraform.io/modules/ipolyzos/acs/azurerm", "provider": "azurerm", "downloads": 10, "description": "Terraform module for the Azure Access Control Service (ACS) ", "source": "ipolyzos/acs/azurerm"}, "dshmelev/cloudformation-autoscaling/aws": {"name": "cloudformation-autoscaling", "url": "https://registry.terraform.io/modules/dshmelev/cloudformation-autoscaling/aws", "provider": "aws", "downloads": 10, "description": "Terraform module which creates Auto Scaling resources on AWS", "source": "dshmelev/cloudformation-autoscaling/aws"}, "odzhu/openshift/aws": {"name": "openshift", "url": "https://registry.terraform.io/modules/odzhu/openshift/aws", "provider": "aws", "downloads": 10, "description": "Automated cloud reference architecture library based on proven design patterns using Terraform", "source": "odzhu/openshift/aws"}, "matti/kubernetes-engine/google": {"name": "kubernetes-engine", "url": "https://registry.terraform.io/modules/matti/kubernetes-engine/google", "provider": "google", "downloads": 10, "description": "", "source": "matti/kubernetes-engine/google"}, "olindata/ezvpc/aws": {"name": "ezvpc", "url": "https://registry.terraform.io/modules/olindata/ezvpc/aws", "provider": "aws", "downloads": 10, "description": "Creating AWS VPC resources for dummies (no subnetting required) in Terraform", "source": "olindata/ezvpc/aws"}, "matti/remove-known-hosts/ssh": {"name": "remove-known-hosts", "url": "https://registry.terraform.io/modules/matti/remove-known-hosts/ssh", "provider": "ssh", "downloads": 10, "description": "", "source": "matti/remove-known-hosts/ssh"}, "Aplyca/efs/aws": {"name": "efs", "url": "https://registry.terraform.io/modules/Aplyca/efs/aws", "provider": "aws", "downloads": 10, "description": "A Terraform Module for how to create EFS on AWS", "source": "Aplyca/efs/aws"}, "rahulkhengare/webapp/azurerm": {"name": "webapp", "url": "https://registry.terraform.io/modules/rahulkhengare/webapp/azurerm", "provider": "azurerm", "downloads": 10, "description": "Terraform Azure RM WebApp Module", "source": "rahulkhengare/webapp/azurerm"}, "amancevice/cloud-project/google": {"name": "cloud-project", "url": "https://registry.terraform.io/modules/amancevice/cloud-project/google", "provider": "google", "downloads": 10, "description": "Terraform configuration for generic Google Cloud Project", "source": "amancevice/cloud-project/google"}, "julienlevasseur/provider/openstack": {"name": "provider", "url": "https://registry.terraform.io/modules/julienlevasseur/provider/openstack", "provider": "openstack", "downloads": 9, "description": "Terraform Openstack Provider Module", "source": "julienlevasseur/provider/openstack"}, "KoeSystems/route53/aws": {"name": "route53", "url": "https://registry.terraform.io/modules/KoeSystems/route53/aws", "provider": "aws", "downloads": 9, "description": "Terraform AWS Route53 module to create public hosted zones.", "source": "KoeSystems/route53/aws"}, "pyToshka/virtualbox/provider": {"name": "virtualbox", "url": "https://registry.terraform.io/modules/pyToshka/virtualbox/provider", "provider": "provider", "downloads": 9, "description": "VirtualBox provider for Terraform in progress ", "source": "pyToshka/virtualbox/provider"}, "AlexanderRMcNeill/secured-static-website/aws": {"name": "secured-static-website", "url": "https://registry.terraform.io/modules/AlexanderRMcNeill/secured-static-website/aws", "provider": "aws", "downloads": 9, "description": "Terraform module that creates everything you need to run secured static site", "source": "AlexanderRMcNeill/secured-static-website/aws"}, "matti/external-registry/kontena": {"name": "external-registry", "url": "https://registry.terraform.io/modules/matti/external-registry/kontena", "provider": "kontena", "downloads": 9, "description": "", "source": "matti/external-registry/kontena"}, "ebekker/cached-ami/aws": {"name": "cached-ami", "url": "https://registry.terraform.io/modules/ebekker/cached-ami/aws", "provider": "aws", "downloads": 9, "description": "A Terraform Module that provides a replacement for the aws_ami data source supporting cached results", "source": "ebekker/cached-ami/aws"}, "cloudposse/kms-key/aws": {"name": "kms-key", "url": "https://registry.terraform.io/modules/cloudposse/kms-key/aws", "provider": "aws", "downloads": 9, "description": "Terraform module to provision a KMS key with alias", "source": "cloudposse/kms-key/aws"}, "Aplyca/cloudfront/aws": {"name": "cloudfront", "url": "https://registry.terraform.io/modules/Aplyca/cloudfront/aws", "provider": "aws", "downloads": 9, "description": "Create AWs CloudFront distribution", "source": "Aplyca/cloudfront/aws"}, "gruntwork-io/couchbase/aws": {"name": "couchbase", "url": "https://registry.terraform.io/modules/gruntwork-io/couchbase/aws", "provider": "aws", "downloads": 8, "description": "Reusable infrastructure modules for running Couchbase on AWS", "source": "gruntwork-io/couchbase/aws"}, "poseidon/kubernetes/digitalocean": {"name": "kubernetes", "url": "https://registry.terraform.io/modules/poseidon/kubernetes/digitalocean", "provider": "digitalocean", "downloads": 8, "description": "Typhoon Digital Ocean - minimal and free Kubernetes (mirror)", "source": "poseidon/kubernetes/digitalocean"}, "julienlevasseur/instance/openstack": {"name": "instance", "url": "https://registry.terraform.io/modules/julienlevasseur/instance/openstack", "provider": "openstack", "downloads": 8, "description": "Terraform OpenStack Instance Module", "source": "julienlevasseur/instance/openstack"}, "anugnes/private-vpc/aws": {"name": "private-vpc", "url": "https://registry.terraform.io/modules/anugnes/private-vpc/aws", "provider": "aws", "downloads": 8, "description": "Terraform module to create a custom VPC in AWS", "source": "anugnes/private-vpc/aws"}, "matti/cli-outputs/kontena": {"name": "cli-outputs", "url": "https://registry.terraform.io/modules/matti/cli-outputs/kontena", "provider": "kontena", "downloads": 8, "description": "", "source": "matti/cli-outputs/kontena"}, "matti/cloud-nodes/kontena": {"name": "cloud-nodes", "url": "https://registry.terraform.io/modules/matti/cloud-nodes/kontena", "provider": "kontena", "downloads": 8, "description": "", "source": "matti/cloud-nodes/kontena"}, "viceIII/elasticsearch/aws": {"name": "elasticsearch", "url": "https://registry.terraform.io/modules/viceIII/elasticsearch/aws", "provider": "aws", "downloads": 8, "description": "", "source": "viceIII/elasticsearch/aws"}, "nicholasjackson/k8s/digitalocean": {"name": "k8s", "url": "https://registry.terraform.io/modules/nicholasjackson/k8s/digitalocean", "provider": "digitalocean", "downloads": 8, "description": "Terraform / Packer example for Kubernetes on DigitalOcean", "source": "nicholasjackson/k8s/digitalocean"}, "nicholasjackson/hashicorp-suite/gcp": {"name": "hashicorp-suite", "url": "https://registry.terraform.io/modules/nicholasjackson/hashicorp-suite/gcp", "provider": "gcp", "downloads": 8, "description": "Terraform module to run Nomad on Google Cloud", "source": "nicholasjackson/hashicorp-suite/gcp"}, "kjanshair/virtual-machine/azurerm": {"name": "virtual-machine", "url": "https://registry.terraform.io/modules/kjanshair/virtual-machine/azurerm", "provider": "azurerm", "downloads": 8, "description": "A Terraform module used to create one or more Linux Virtual Machine.", "source": "kjanshair/virtual-machine/azurerm"}, "nicholasjackson/gcp-vpn/aws": {"name": "gcp-vpn", "url": "https://registry.terraform.io/modules/nicholasjackson/gcp-vpn/aws", "provider": "aws", "downloads": 8, "description": "Terraform module to create a VPN between AWS and GCP", "source": "nicholasjackson/gcp-vpn/aws"}, "google-terraform-modules/cloudfunctions-http/google": {"name": "cloudfunctions-http", "url": "https://registry.terraform.io/modules/google-terraform-modules/cloudfunctions-http/google", "provider": "google", "downloads": 8, "description": "Create Google CloudFunctions HTTP ", "source": "google-terraform-modules/cloudfunctions-http/google"}, "ovh/publiccloud-k8s/ovh": {"name": "publiccloud-k8s", "url": "https://registry.terraform.io/modules/ovh/publiccloud-k8s/ovh", "provider": "ovh", "downloads": 8, "description": "", "source": "ovh/publiccloud-k8s/ovh"}, "telia-oss/lambda/aws": {"name": "lambda", "url": "https://registry.terraform.io/modules/telia-oss/lambda/aws", "provider": "aws", "downloads": 8, "description": "Lambda module for Terraform.", "source": "telia-oss/lambda/aws"}, "cloudposse/ec2-ami-backup/aws": {"name": "ec2-ami-backup", "url": "https://registry.terraform.io/modules/cloudposse/ec2-ami-backup/aws", "provider": "aws", "downloads": 7, "description": "Terraform module for automatic & scheduled AMI creation", "source": "cloudposse/ec2-ami-backup/aws"}, "graymeta/platform/aws": {"name": "platform", "url": "https://registry.terraform.io/modules/graymeta/platform/aws", "provider": "aws", "downloads": 7, "description": "Terraform module for the deployment of the GrayMeta Platform into AWS. Contact GrayMeta for an enterprise license to gain access to the required AMIs.", "source": "graymeta/platform/aws"}, "7Factor/concourse/aws": {"name": "concourse", "url": "https://registry.terraform.io/modules/7Factor/concourse/aws", "provider": "aws", "downloads": 7, "description": "Terraform Module for a distributed concourse cluster on AWS", "source": "7Factor/concourse/aws"}, "matti/master-outputs/kontena": {"name": "master-outputs", "url": "https://registry.terraform.io/modules/matti/master-outputs/kontena", "provider": "kontena", "downloads": 7, "description": "", "source": "matti/master-outputs/kontena"}, "matti/certificate-registration/kontena": {"name": "certificate-registration", "url": "https://registry.terraform.io/modules/matti/certificate-registration/kontena", "provider": "kontena", "downloads": 7, "description": "", "source": "matti/certificate-registration/kontena"}, "sacloud/kubernetes-single-master/sakuracloud": {"name": "kubernetes-single-master", "url": "https://registry.terraform.io/modules/sacloud/kubernetes-single-master/sakuracloud", "provider": "sakuracloud", "downloads": 7, "description": "Install single-master Kubernetes cluster", "source": "sacloud/kubernetes-single-master/sakuracloud"}, "ndejong/salt-masterless/digitalocean": {"name": "salt-masterless", "url": "https://registry.terraform.io/modules/ndejong/salt-masterless/digitalocean", "provider": "digitalocean", "downloads": 7, "description": "Terraform module to create a Digital Ocean Droplet backed with Salt in a masterless arrangement.", "source": "ndejong/salt-masterless/digitalocean"}, "sorenrix/centos-jenkins/aws": {"name": "centos-jenkins", "url": "https://registry.terraform.io/modules/sorenrix/centos-jenkins/aws", "provider": "aws", "downloads": 7, "description": "Installs Jenkins and Nginx on EC2 CentOS", "source": "sorenrix/centos-jenkins/aws"}, "10thmagnitude/vault/azurerm": {"name": "vault", "url": "https://registry.terraform.io/modules/10thmagnitude/vault/azurerm", "provider": "azurerm", "downloads": 7, "description": "A Terraform Module for how to run Vault on AzureRM using Terraform and Packer", "source": "10thmagnitude/vault/azurerm"}, "sidick/eks-cluster/aws": {"name": "eks-cluster", "url": "https://registry.terraform.io/modules/sidick/eks-cluster/aws", "provider": "aws", "downloads": 7, "description": "Terraform EKS Cluster Module", "source": "sidick/eks-cluster/aws"}, "terraformdns/dns-recordsets/google": {"name": "dns-recordsets", "url": "https://registry.terraform.io/modules/terraformdns/dns-recordsets/google", "provider": "google", "downloads": 7, "description": "Terraform module for creating DNS recordsets in a Google Cloud DNS zone", "source": "terraformdns/dns-recordsets/google"}, "zoitech/saml/aws": {"name": "saml", "url": "https://registry.terraform.io/modules/zoitech/saml/aws", "provider": "aws", "downloads": 6, "description": "Terraform module which creates AWS access via SAML.", "source": "zoitech/saml/aws"}, "cloudposse/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/cloudposse/vpc/aws", "provider": "aws", "downloads": 6, "description": "Terraform Module that defines a VPC with public/private subnets across multiple AZs with Internet Gateways", "source": "cloudposse/vpc/aws"}, "zoitech/vpn/aws": {"name": "vpn", "url": "https://registry.terraform.io/modules/zoitech/vpn/aws", "provider": "aws", "downloads": 6, "description": "Terraform module which setup a static routed vpn connection.", "source": "zoitech/vpn/aws"}, "julienlevasseur/provider/consul": {"name": "provider", "url": "https://registry.terraform.io/modules/julienlevasseur/provider/consul", "provider": "consul", "downloads": 6, "description": "Terraform Consul Provider Module", "source": "julienlevasseur/provider/consul"}, "btower-labz/btlabz-nat-base/aws": {"name": "btlabz-nat-base", "url": "https://registry.terraform.io/modules/btower-labz/btlabz-nat-base/aws", "provider": "aws", "downloads": 6, "description": "BTLabz AWS VPC parts: NAT", "source": "btower-labz/btlabz-nat-base/aws"}, "sjones-sot/virtual-network/azurerm": {"name": "virtual-network", "url": "https://registry.terraform.io/modules/sjones-sot/virtual-network/azurerm", "provider": "azurerm", "downloads": 6, "description": "Basic module for creating an AzureRM Vnet", "source": "sjones-sot/virtual-network/azurerm"}, "mazgi/static-website/aws": {"name": "static-website", "url": "https://registry.terraform.io/modules/mazgi/static-website/aws", "provider": "aws", "downloads": 6, "description": "", "source": "mazgi/static-website/aws"}, "matti/grid/kontena": {"name": "grid", "url": "https://registry.terraform.io/modules/matti/grid/kontena", "provider": "kontena", "downloads": 6, "description": "", "source": "matti/grid/kontena"}, "matti/config/kupo": {"name": "config", "url": "https://registry.terraform.io/modules/matti/config/kupo", "provider": "kupo", "downloads": 6, "description": "", "source": "matti/config/kupo"}, "slalompdx/codecommit-cicd/aws": {"name": "codecommit-cicd", "url": "https://registry.terraform.io/modules/slalompdx/codecommit-cicd/aws", "provider": "aws", "downloads": 6, "description": "Terraform module that stands up a new AWS CodeCommit repository integrated with AWS CodePipeline and CodeBuild for a end to end CI/CD pipeline in AWS.", "source": "slalompdx/codecommit-cicd/aws"}, "unruly/airflow/aws": {"name": "airflow", "url": "https://registry.terraform.io/modules/unruly/airflow/aws", "provider": "aws", "downloads": 6, "description": "Terraform module for a PostgreSQL-backed Apache Airflow instance", "source": "unruly/airflow/aws"}, "azavea/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/azavea/vpc/aws", "provider": "aws", "downloads": 5, "description": "A Terraform module to create an Amazon Web Services (AWS) Virtual Private Cloud (VPC).", "source": "azavea/vpc/aws"}, "turnerlabs/user/s3": {"name": "user", "url": "https://registry.terraform.io/modules/turnerlabs/user/s3", "provider": "s3", "downloads": 5, "description": "A Terraform module that creates a tagged S3 bucket and an IAM user/key with access to the bucket", "source": "turnerlabs/user/s3"}, "factorysh/ungpg/basic": {"name": "ungpg", "url": "https://registry.terraform.io/modules/factorysh/ungpg/basic", "provider": "basic", "downloads": 5, "description": "Decrypt settings for Terraform", "source": "factorysh/ungpg/basic"}, "ovh/publiccloud-spark/ovh": {"name": "publiccloud-spark", "url": "https://registry.terraform.io/modules/ovh/publiccloud-spark/ovh", "provider": "ovh", "downloads": 5, "description": "", "source": "ovh/publiccloud-spark/ovh"}, "Azure/search-service/azurerm": {"name": "search-service", "url": "https://registry.terraform.io/modules/Azure/search-service/azurerm", "provider": "azurerm", "downloads": 5, "description": "Terraform module to create Azure Search service resource", "source": "Azure/search-service/azurerm"}, "miguelaferreira/ecs-cluster/aws": {"name": "ecs-cluster", "url": "https://registry.terraform.io/modules/miguelaferreira/ecs-cluster/aws", "provider": "aws", "downloads": 5, "description": "Mirror of https://gitlab.com/open-source-devex/terraform-modules/aws/ecs-cluster", "source": "miguelaferreira/ecs-cluster/aws"}, "justincampbell/test/null": {"name": "test", "url": "https://registry.terraform.io/modules/justincampbell/test/null", "provider": "null", "downloads": 5, "description": "", "source": "justincampbell/test/null"}, "sjones-sot/subnet/azurerm": {"name": "subnet", "url": "https://registry.terraform.io/modules/sjones-sot/subnet/azurerm", "provider": "azurerm", "downloads": 5, "description": "Module for creation of subnets in an existing Virtual Network", "source": "sjones-sot/subnet/azurerm"}, "claranet/vpc-modules/aws": {"name": "vpc-modules", "url": "https://registry.terraform.io/modules/claranet/vpc-modules/aws", "provider": "aws", "downloads": 5, "description": "Terraform modules for AWS VPC management", "source": "claranet/vpc-modules/aws"}, "matti/until/http": {"name": "until", "url": "https://registry.terraform.io/modules/matti/until/http", "provider": "http", "downloads": 5, "description": "", "source": "matti/until/http"}, "matti/cli-outputs/heroku": {"name": "cli-outputs", "url": "https://registry.terraform.io/modules/matti/cli-outputs/heroku", "provider": "heroku", "downloads": 5, "description": "", "source": "matti/cli-outputs/heroku"}, "johntdyer/SnsToCiscoSpark/aws": {"name": "SnsToCiscoSpark", "url": "https://registry.terraform.io/modules/johntdyer/SnsToCiscoSpark/aws", "provider": "aws", "downloads": 5, "description": "Terraform module to send SNS notifications to Cisco spark space", "source": "johntdyer/SnsToCiscoSpark/aws"}, "outerstack/ec2migrate/aws": {"name": "ec2migrate", "url": "https://registry.terraform.io/modules/outerstack/ec2migrate/aws", "provider": "aws", "downloads": 5, "description": "Terraform module for making EC2 migrations easier", "source": "outerstack/ec2migrate/aws"}, "manicminer/acm-certificate/aws": {"name": "acm-certificate", "url": "https://registry.terraform.io/modules/manicminer/acm-certificate/aws", "provider": "aws", "downloads": 5, "description": "Terraform module to create and validate AWS ACM certificates with DNS validation via Route53", "source": "manicminer/acm-certificate/aws"}, "cloudposse/cloudtrail/aws": {"name": "cloudtrail", "url": "https://registry.terraform.io/modules/cloudposse/cloudtrail/aws", "provider": "aws", "downloads": 4, "description": "Terraform module to provision an AWS CloudTrail and an encrypted S3 bucket with versioning to store CloudTrail logs", "source": "cloudposse/cloudtrail/aws"}, "cloudposse/ec2-instance/aws": {"name": "ec2-instance", "url": "https://registry.terraform.io/modules/cloudposse/ec2-instance/aws", "provider": "aws", "downloads": 4, "description": "Terraform Module for providing a general EC2 instance provisioned by Ansible", "source": "cloudposse/ec2-instance/aws"}, "poseidon/kubernetes/google": {"name": "kubernetes", "url": "https://registry.terraform.io/modules/poseidon/kubernetes/google", "provider": "google", "downloads": 4, "description": "Typhoon Google Cloud - minimal and free Kubernetes (mirror)", "source": "poseidon/kubernetes/google"}, "mitchellh/fastai/aws": {"name": "fastai", "url": "https://registry.terraform.io/modules/mitchellh/fastai/aws", "provider": "aws", "downloads": 4, "description": "Terraform module to create Fast.ai course instance.", "source": "mitchellh/fastai/aws"}, "btower-labz/btlabz-vpc-ha-3x/aws": {"name": "btlabz-vpc-ha-3x", "url": "https://registry.terraform.io/modules/btower-labz/btlabz-vpc-ha-3x/aws", "provider": "aws", "downloads": 4, "description": "BTLabz AWS VPC parts: HA VPC (3x, pri, pub, nat)", "source": "btower-labz/btlabz-vpc-ha-3x/aws"}, "javilac/iam/aws": {"name": "iam", "url": "https://registry.terraform.io/modules/javilac/iam/aws", "provider": "aws", "downloads": 4, "description": "Module to create aws iam resources", "source": "javilac/iam/aws"}, "apparentlymart/serverless-webapp/aws": {"name": "serverless-webapp", "url": "https://registry.terraform.io/modules/apparentlymart/serverless-webapp/aws", "provider": "aws", "downloads": 4, "description": "Terraform module for deploying \"serverless\" applications to AWS Lambda and Amazon API Gateway", "source": "apparentlymart/serverless-webapp/aws"}, "viceIII/redis-cluster/aws": {"name": "redis-cluster", "url": "https://registry.terraform.io/modules/viceIII/redis-cluster/aws", "provider": "aws", "downloads": 4, "description": "", "source": "viceIII/redis-cluster/aws"}, "ming-wu/minikube/aws": {"name": "minikube", "url": "https://registry.terraform.io/modules/ming-wu/minikube/aws", "provider": "aws", "downloads": 4, "description": "Terraform module for single node Kubernetes instance bootstrapped using kubeadm", "source": "ming-wu/minikube/aws"}, "matti/up/kupo": {"name": "up", "url": "https://registry.terraform.io/modules/matti/up/kupo", "provider": "kupo", "downloads": 4, "description": "", "source": "matti/up/kupo"}, "matti/gce-stateful-zonal-instance-groups/google": {"name": "gce-stateful-zonal-instance-groups", "url": "https://registry.terraform.io/modules/matti/gce-stateful-zonal-instance-groups/google", "provider": "google", "downloads": 4, "description": "", "source": "matti/gce-stateful-zonal-instance-groups/google"}, "merten2000/test/aws": {"name": "test", "url": "https://registry.terraform.io/modules/merten2000/test/aws", "provider": "aws", "downloads": 4, "description": "", "source": "merten2000/test/aws"}, "cloudposse/cloudwatch-logs/aws": {"name": "cloudwatch-logs", "url": "https://registry.terraform.io/modules/cloudposse/cloudwatch-logs/aws", "provider": "aws", "downloads": 4, "description": "Terraform Module to Provide a CloudWatch Logs Endpoint", "source": "cloudposse/cloudwatch-logs/aws"}, "sbogacz/multiregion-static-site/aws": {"name": "multiregion-static-site", "url": "https://registry.terraform.io/modules/sbogacz/multiregion-static-site/aws", "provider": "aws", "downloads": 4, "description": "A repo to hold a Terraform module that simplifies website deploys.", "source": "sbogacz/multiregion-static-site/aws"}, "GMafra/firewall-rules/gcp": {"name": "firewall-rules", "url": "https://registry.terraform.io/modules/GMafra/firewall-rules/gcp", "provider": "gcp", "downloads": 4, "description": " Terraform module for creating Firewall rules on Google Cloud", "source": "GMafra/firewall-rules/gcp"}, "portworx/portworx-instance/portworx": {"name": "portworx-instance", "url": "https://registry.terraform.io/modules/portworx/portworx-instance/portworx", "provider": "portworx", "downloads": 4, "description": "Terraform module for deploying Portworx persistent data fabric for containers", "source": "portworx/portworx-instance/portworx"}, "cloudposse/ec2-instance-group/aws": {"name": "ec2-instance-group", "url": "https://registry.terraform.io/modules/cloudposse/ec2-instance-group/aws", "provider": "aws", "downloads": 4, "description": "Terraform Module for provisioning multiple general purpose EC2 hosts for stateful applications.", "source": "cloudposse/ec2-instance-group/aws"}, "terraformdns/dns-recordsets/azurerm": {"name": "dns-recordsets", "url": "https://registry.terraform.io/modules/terraformdns/dns-recordsets/azurerm", "provider": "azurerm", "downloads": 4, "description": "Terraform module for creating DNS recordsets in an Azure DNS zone", "source": "terraformdns/dns-recordsets/azurerm"}, "nephosolutions/gcs-bucket/google": {"name": "gcs-bucket", "url": "https://registry.terraform.io/modules/nephosolutions/gcs-bucket/google", "provider": "google", "downloads": 4, "description": "", "source": "nephosolutions/gcs-bucket/google"}, "kickin6/firewall-rule/google": {"name": "firewall-rule", "url": "https://registry.terraform.io/modules/kickin6/firewall-rule/google", "provider": "google", "downloads": 4, "description": "Modular Network Firewall Rule on Google Compute Engine for Terraform. Includes sub-modules for every allowed variable combination in both INGRESS and EGRESS directions.", "source": "kickin6/firewall-rule/google"}, "nephosolutions/iam-service-account/google": {"name": "iam-service-account", "url": "https://registry.terraform.io/modules/nephosolutions/iam-service-account/google", "provider": "google", "downloads": 4, "description": "", "source": "nephosolutions/iam-service-account/google"}, "schoology/consul-yaml/provider": {"name": "consul-yaml", "url": "https://registry.terraform.io/modules/schoology/consul-yaml/provider", "provider": "provider", "downloads": 4, "description": "Terraform Consul provider with YAML support", "source": "schoology/consul-yaml/provider"}, "cloudposse/elasticache-memcached/aws": {"name": "elasticache-memcached", "url": "https://registry.terraform.io/modules/cloudposse/elasticache-memcached/aws", "provider": "aws", "downloads": 3, "description": "Terraform Module for ElastiCache Memcached Cluster", "source": "cloudposse/elasticache-memcached/aws"}, "r4dx/jmeter/aws": {"name": "jmeter", "url": "https://registry.terraform.io/modules/r4dx/jmeter/aws", "provider": "aws", "downloads": 3, "description": "Easy way to create jMeter cluster with terraform on your AWS infrastructure.", "source": "r4dx/jmeter/aws"}, "odzhu/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/odzhu/vpc/aws", "provider": "aws", "downloads": 3, "description": "AWS VPC Terraform module", "source": "odzhu/vpc/aws"}, "T-Wong/ethereum/aws": {"name": "ethereum", "url": "https://registry.terraform.io/modules/T-Wong/ethereum/aws", "provider": "aws", "downloads": 3, "description": "A Terraform Module for running an Ethereum mining farm on AWS using Terraform.", "source": "T-Wong/ethereum/aws"}, "cloudposse/teleport-storage/aws": {"name": "teleport-storage", "url": "https://registry.terraform.io/modules/cloudposse/teleport-storage/aws", "provider": "aws", "downloads": 3, "description": "Gravitational Teleport backing services (S3, DynamoDB)", "source": "cloudposse/teleport-storage/aws"}, "viceIII/rds/aws": {"name": "rds", "url": "https://registry.terraform.io/modules/viceIII/rds/aws", "provider": "aws", "downloads": 3, "description": "", "source": "viceIII/rds/aws"}, "maartenvanderhoef/timeboard/datadog": {"name": "timeboard", "url": "https://registry.terraform.io/modules/maartenvanderhoef/timeboard/datadog", "provider": "datadog", "downloads": 3, "description": "", "source": "maartenvanderhoef/timeboard/datadog"}, "cloudnativelabs/kubernetes/packet": {"name": "kubernetes", "url": "https://registry.terraform.io/modules/cloudnativelabs/kubernetes/packet", "provider": "packet", "downloads": 2, "description": "Automated Kubernetes clusters on packet.net servers.", "source": "cloudnativelabs/kubernetes/packet"}, "tdooner/twilio/provider": {"name": "twilio", "url": "https://registry.terraform.io/modules/tdooner/twilio/provider", "provider": "provider", "downloads": 2, "description": "Terraform provider to allocate and configure local phone numbers on twilio", "source": "tdooner/twilio/provider"}, "cloudposse/efs-backup/aws": {"name": "efs-backup", "url": "https://registry.terraform.io/modules/cloudposse/efs-backup/aws", "provider": "aws", "downloads": 2, "description": "Terraform module designed to easily backup EFS filesystems to S3 using DataPipeline", "source": "cloudposse/efs-backup/aws"}, "cloudposse/dynamic-subnets/aws": {"name": "dynamic-subnets", "url": "https://registry.terraform.io/modules/cloudposse/dynamic-subnets/aws", "provider": "aws", "downloads": 2, "description": "Terraform module for public and private subnets provisioning in existing VPC", "source": "cloudposse/dynamic-subnets/aws"}, "cloudposse/iam-system-user/aws": {"name": "iam-system-user", "url": "https://registry.terraform.io/modules/cloudposse/iam-system-user/aws", "provider": "aws", "downloads": 2, "description": "Terraform Module to Provision a Basic IAM System User Suitable for CI/CD Systems (E.g. TravisCI, CircleCI)", "source": "cloudposse/iam-system-user/aws"}, "cloudposse/jenkins/aws": {"name": "jenkins", "url": "https://registry.terraform.io/modules/cloudposse/jenkins/aws", "provider": "aws", "downloads": 2, "description": "Terraform module to build Docker image with Jenkins, save it to an ECR repo, and deploy to Elastic Beanstalk running Docker stack", "source": "cloudposse/jenkins/aws"}, "SweetOps/service-account/google": {"name": "service-account", "url": "https://registry.terraform.io/modules/SweetOps/service-account/google", "provider": "google", "downloads": 2, "description": "Terraform module : GCP : for creation service account.", "source": "SweetOps/service-account/google"}, "cloudposse/named-subnets/aws": {"name": "named-subnets", "url": "https://registry.terraform.io/modules/cloudposse/named-subnets/aws", "provider": "aws", "downloads": 2, "description": "", "source": "cloudposse/named-subnets/aws"}, "cloudposse/multi-az-subnets/aws": {"name": "multi-az-subnets", "url": "https://registry.terraform.io/modules/cloudposse/multi-az-subnets/aws", "provider": "aws", "downloads": 2, "description": "Terraform module for multi-AZ public and private subnets provisioning", "source": "cloudposse/multi-az-subnets/aws"}, "gandhiniraj/test/azure": {"name": "test", "url": "https://registry.terraform.io/modules/gandhiniraj/test/azure", "provider": "azure", "downloads": 2, "description": "Sample Module, created solely to learn terraform registry", "source": "gandhiniraj/test/azure"}, "anugnes/subnet/azure": {"name": "subnet", "url": "https://registry.terraform.io/modules/anugnes/subnet/azure", "provider": "azure", "downloads": 2, "description": "Azure Subnet Module for Terraform", "source": "anugnes/subnet/azure"}, "ndejong/cjdns-node/digitalocean": {"name": "cjdns-node", "url": "https://registry.terraform.io/modules/ndejong/cjdns-node/digitalocean", "provider": "digitalocean", "downloads": 2, "description": "Terraform module to create a Cjdns node in Digital Ocean and push your locally managed cjdroute.conf files", "source": "ndejong/cjdns-node/digitalocean"}, "andresvia/test/autodesk": {"name": "test", "url": "https://registry.terraform.io/modules/andresvia/test/autodesk", "provider": "autodesk", "downloads": 2, "description": "test", "source": "andresvia/test/autodesk"}, "ndejong/strelaysrv-node/digitalocean": {"name": "strelaysrv-node", "url": "https://registry.terraform.io/modules/ndejong/strelaysrv-node/digitalocean", "provider": "digitalocean", "downloads": 2, "description": "Terraform module to create a Syncthing Relay Server on Digital Ocean", "source": "ndejong/strelaysrv-node/digitalocean"}, "matti/heroku-master/kontena": {"name": "heroku-master", "url": "https://registry.terraform.io/modules/matti/heroku-master/kontena", "provider": "kontena", "downloads": 2, "description": "", "source": "matti/heroku-master/kontena"}, "matti/node-outputs/kontena": {"name": "node-outputs", "url": "https://registry.terraform.io/modules/matti/node-outputs/kontena", "provider": "kontena", "downloads": 2, "description": "", "source": "matti/node-outputs/kontena"}, "matti/nodes-outputs/kontena": {"name": "nodes-outputs", "url": "https://registry.terraform.io/modules/matti/nodes-outputs/kontena", "provider": "kontena", "downloads": 2, "description": "", "source": "matti/nodes-outputs/kontena"}, "bevry/hashistack/scaleway": {"name": "hashistack", "url": "https://registry.terraform.io/modules/bevry/hashistack/scaleway", "provider": "scaleway", "downloads": 2, "description": "Terraform module to deploy Consul, Nomad, Vault onto Scaleway", "source": "bevry/hashistack/scaleway"}, "jianyuan/sentry/provider": {"name": "sentry", "url": "https://registry.terraform.io/modules/jianyuan/sentry/provider", "provider": "provider", "downloads": 2, "description": "Terraform provider for Sentry", "source": "jianyuan/sentry/provider"}, "devops-workflow/teams/pagerduty": {"name": "teams", "url": "https://registry.terraform.io/modules/devops-workflow/teams/pagerduty", "provider": "pagerduty", "downloads": 2, "description": "Terraform module to manage PagerDuty teams", "source": "devops-workflow/teams/pagerduty"}, "traveloka/public-route53-zone/aws": {"name": "public-route53-zone", "url": "https://registry.terraform.io/modules/traveloka/public-route53-zone/aws", "provider": "aws", "downloads": 2, "description": "A terraform module which provisions a Public Route53 Hosted Zone", "source": "traveloka/public-route53-zone/aws"}, "merten2000/server/aws": {"name": "server", "url": "https://registry.terraform.io/modules/merten2000/server/aws", "provider": "aws", "downloads": 2, "description": "", "source": "merten2000/server/aws"}, "merten2000/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/merten2000/vpc/aws", "provider": "aws", "downloads": 2, "description": "", "source": "merten2000/vpc/aws"}, "traveloka/alb-single-listener/aws": {"name": "alb-single-listener", "url": "https://registry.terraform.io/modules/traveloka/alb-single-listener/aws", "provider": "aws", "downloads": 2, "description": "A terraform module which provisions a DNS record that points to an Application LB with a single listener", "source": "traveloka/alb-single-listener/aws"}, "traveloka/private-route53-zone/aws": {"name": "private-route53-zone", "url": "https://registry.terraform.io/modules/traveloka/private-route53-zone/aws", "provider": "aws", "downloads": 2, "description": "", "source": "traveloka/private-route53-zone/aws"}, "gordonbondon/verify/common": {"name": "verify", "url": "https://registry.terraform.io/modules/gordonbondon/verify/common", "provider": "common", "downloads": 2, "description": "Terraform module to verify variables", "source": "gordonbondon/verify/common"}, "bincyber/remote-state/aws": {"name": "remote-state", "url": "https://registry.terraform.io/modules/bincyber/remote-state/aws", "provider": "aws", "downloads": 2, "description": "Terraform module to setup remote state for AWS", "source": "bincyber/remote-state/aws"}, "riboseinc/s3-cloudfront-website/aws": {"name": "s3-cloudfront-website", "url": "https://registry.terraform.io/modules/riboseinc/s3-cloudfront-website/aws", "provider": "aws", "downloads": 2, "description": "Terraform module for creating a static S3 website with CloudFront with an SSL certificate (e.g., from ACM)", "source": "riboseinc/s3-cloudfront-website/aws"}, "opsgang/pritunl-vpn-server/aws": {"name": "pritunl-vpn-server", "url": "https://registry.terraform.io/modules/opsgang/pritunl-vpn-server/aws", "provider": "aws", "downloads": 2, "description": "Pritunl VPN Server for your public/private like VPC on AWS", "source": "opsgang/pritunl-vpn-server/aws"}, "amancevice/facebook-webhook/google": {"name": "facebook-webhook", "url": "https://registry.terraform.io/modules/amancevice/facebook-webhook/google", "provider": "google", "downloads": 2, "description": "Google Cloud Function for responding to facebook webhooks", "source": "amancevice/facebook-webhook/google"}, "vancluever/virtual-machine/vsphere": {"name": "virtual-machine", "url": "https://registry.terraform.io/modules/vancluever/virtual-machine/vsphere", "provider": "vsphere", "downloads": 2, "description": "Universal module for deploying vSphere virtual machines with Terraform", "source": "vancluever/virtual-machine/vsphere"}, "philips-software/account-setup/aws": {"name": "account-setup", "url": "https://registry.terraform.io/modules/philips-software/account-setup/aws", "provider": "aws", "downloads": 2, "description": "Terraform module configure IAM in a new AWS account setup", "source": "philips-software/account-setup/aws"}, "mediapop/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/mediapop/vpc/aws", "provider": "aws", "downloads": 2, "description": "Create a preconfigured public VPC.", "source": "mediapop/vpc/aws"}, "Cox-Automotive/alks/provider": {"name": "alks", "url": "https://registry.terraform.io/modules/Cox-Automotive/alks/provider", "provider": "provider", "downloads": 1, "description": "Terraform Provider for ALKS", "source": "Cox-Automotive/alks/provider"}, "spaceapegames/wavefront/provider": {"name": "wavefront", "url": "https://registry.terraform.io/modules/spaceapegames/wavefront/provider", "provider": "provider", "downloads": 1, "description": "A Terraform Provider for Wavefront (https://www.wavefront.com/)", "source": "spaceapegames/wavefront/provider"}, "jeromegamez/fastmail-records/digitalocean": {"name": "fastmail-records", "url": "https://registry.terraform.io/modules/jeromegamez/fastmail-records/digitalocean", "provider": "digitalocean", "downloads": 1, "description": "A terraform module to provision DigitalOcean with DNS records for FastMail.", "source": "jeromegamez/fastmail-records/digitalocean"}, "moltin/stack/none": {"name": "stack", "url": "https://registry.terraform.io/modules/moltin/stack/none", "provider": "none", "downloads": 1, "description": "A group of more formulated Terraform modules", "source": "moltin/stack/none"}, "cloudposse/codebuild/aws": {"name": "codebuild", "url": "https://registry.terraform.io/modules/cloudposse/codebuild/aws", "provider": "aws", "downloads": 1, "description": "Terraform Module to easily leverage AWS CodeBuild for Continuous Integration", "source": "cloudposse/codebuild/aws"}, "cloudposse/route53-cluster-zone/aws": {"name": "route53-cluster-zone", "url": "https://registry.terraform.io/modules/cloudposse/route53-cluster-zone/aws", "provider": "aws", "downloads": 1, "description": "Terraform Cluster Domain (e.g. `prod.ourcompany.com`)", "source": "cloudposse/route53-cluster-zone/aws"}, "webdevwilson/autoscaling-tags/aws": {"name": "autoscaling-tags", "url": "https://registry.terraform.io/modules/webdevwilson/autoscaling-tags/aws", "provider": "aws", "downloads": 1, "description": "Terraform module for copying tags to autoscaling group instances", "source": "webdevwilson/autoscaling-tags/aws"}, "poseidon/bootkube/render": {"name": "bootkube", "url": "https://registry.terraform.io/modules/poseidon/bootkube/render", "provider": "render", "downloads": 1, "description": "Render kubernetes-incubator/bootkube assets with Terraform", "source": "poseidon/bootkube/render"}, "hd-deman/static-website/aws": {"name": "static-website", "url": "https://registry.terraform.io/modules/hd-deman/static-website/aws", "provider": "aws", "downloads": 1, "description": "Module to create a fully functional static site in AWS based on S3 with optional CloudFront and Route53", "source": "hd-deman/static-website/aws"}, "admintome/puppet/nomad": {"name": "puppet", "url": "https://registry.terraform.io/modules/admintome/puppet/nomad", "provider": "nomad", "downloads": 1, "description": "Terraform module to deploy a puppet environment to a nomad cluster", "source": "admintome/puppet/nomad"}, "isaacbroyles/cassandra/azurerm": {"name": "cassandra", "url": "https://registry.terraform.io/modules/isaacbroyles/cassandra/azurerm", "provider": "azurerm", "downloads": 1, "description": "A Terraform Module for how to run Cassandra on AzureRM using Terraform and Packer", "source": "isaacbroyles/cassandra/azurerm"}, "beezly/public-ip-list/fastly": {"name": "public-ip-list", "url": "https://registry.terraform.io/modules/beezly/public-ip-list/fastly", "provider": "fastly", "downloads": 1, "description": "Terraform Module for Fastly IP addresses", "source": "beezly/public-ip-list/fastly"}, "mewa/serverless-resource/aws": {"name": "serverless-resource", "url": "https://registry.terraform.io/modules/mewa/serverless-resource/aws", "provider": "aws", "downloads": 1, "description": "", "source": "mewa/serverless-resource/aws"}, "joshdurbin/canary-security-sensor-capture-rest-api/aws": {"name": "canary-security-sensor-capture-rest-api", "url": "https://registry.terraform.io/modules/joshdurbin/canary-security-sensor-capture-rest-api/aws", "provider": "aws", "downloads": 0, "description": "A TF module for periodically checking in with the Canary API to capture and store Canary sensor data in dynamodb tables and produce an API endpoint for accessing the data.", "source": "joshdurbin/canary-security-sensor-capture-rest-api/aws"}, "xuwang/lambda/hugo": {"name": "lambda", "url": "https://registry.terraform.io/modules/xuwang/lambda/hugo", "provider": "hugo", "downloads": 0, "description": "Create Hugo static website generator on AWS Lambda with Terraform", "source": "xuwang/lambda/hugo"}, "azavea/s3-origin/aws": {"name": "s3-origin", "url": "https://registry.terraform.io/modules/azavea/s3-origin/aws", "provider": "aws", "downloads": 0, "description": "A terraform module to create an S3 origin for use with CloudFront.", "source": "azavea/s3-origin/aws"}, "moltin/modules/none": {"name": "modules", "url": "https://registry.terraform.io/modules/moltin/modules/none", "provider": "none", "downloads": 0, "description": "A group of base Terraform modules", "source": "moltin/modules/none"}, "meshhq/ecs-cluster/meshhq": {"name": "ecs-cluster", "url": "https://registry.terraform.io/modules/meshhq/ecs-cluster/meshhq", "provider": "meshhq", "downloads": 0, "description": "", "source": "meshhq/ecs-cluster/meshhq"}, "sysadmiral/secgrouprule-cloudflare/aws": {"name": "secgrouprule-cloudflare", "url": "https://registry.terraform.io/modules/sysadmiral/secgrouprule-cloudflare/aws", "provider": "aws", "downloads": 0, "description": "Allow traffic from cloudflare to your origin by including this module", "source": "sysadmiral/secgrouprule-cloudflare/aws"}, "cloudposse/cicd/aws": {"name": "cicd", "url": "https://registry.terraform.io/modules/cloudposse/cicd/aws", "provider": "aws", "downloads": 0, "description": "Terraform Module for CI/CD with AWS Code Pipeline and Code Build", "source": "cloudposse/cicd/aws"}, "cloudposse/ec2-admin-server/aws": {"name": "ec2-admin-server", "url": "https://registry.terraform.io/modules/cloudposse/ec2-admin-server/aws", "provider": "aws", "downloads": 0, "description": "Terraform Module for providing a EC2 instance capable of running admin tasks and provisioned by Ansible", "source": "cloudposse/ec2-admin-server/aws"}, "cloudposse/ec2-ami-snapshot/aws": {"name": "ec2-ami-snapshot", "url": "https://registry.terraform.io/modules/cloudposse/ec2-ami-snapshot/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to easily generate AMI snapshots to create replica instances", "source": "cloudposse/ec2-ami-snapshot/aws"}, "diogok/docker-swarm/scaleway": {"name": "docker-swarm", "url": "https://registry.terraform.io/modules/diogok/docker-swarm/scaleway", "provider": "scaleway", "downloads": 0, "description": "Terraform module to create a docker swarm cluster on Scaleway.", "source": "diogok/docker-swarm/scaleway"}, "poseidon/kubernetes/onprem": {"name": "kubernetes", "url": "https://registry.terraform.io/modules/poseidon/kubernetes/onprem", "provider": "onprem", "downloads": 0, "description": "Typhoon bare-metal - minimal and free Kubernetes (mirror)", "source": "poseidon/kubernetes/onprem"}, "mootpt/aws/provider": {"name": "aws", "url": "https://registry.terraform.io/modules/mootpt/aws/provider", "provider": "provider", "downloads": 0, "description": "Terraform aws provider", "source": "mootpt/aws/provider"}, "orzarchi/cloudflare-security-group/aws": {"name": "cloudflare-security-group", "url": "https://registry.terraform.io/modules/orzarchi/cloudflare-security-group/aws", "provider": "aws", "downloads": 0, "description": "A Terraform module that populates a security group with cloudflare ip ranges and keeps it updated daily.", "source": "orzarchi/cloudflare-security-group/aws"}, "KoeSystems/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/KoeSystems/vpc/aws", "provider": "aws", "downloads": 0, "description": "Terraform AWS VPC module", "source": "KoeSystems/vpc/aws"}, "opsgang/fastly-s3-staticwebsite/aws": {"name": "fastly-s3-staticwebsite", "url": "https://registry.terraform.io/modules/opsgang/fastly-s3-staticwebsite/aws", "provider": "aws", "downloads": 0, "description": "This module allows you serving S3 bucket website through Fastly", "source": "opsgang/fastly-s3-staticwebsite/aws"}, "apparentlymart/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/apparentlymart/vpc/aws", "provider": "aws", "downloads": 0, "description": "Terraform module which creates VPC resources on AWS", "source": "apparentlymart/vpc/aws"}, "admintome/elasticsearch/nomad": {"name": "elasticsearch", "url": "https://registry.terraform.io/modules/admintome/elasticsearch/nomad", "provider": "nomad", "downloads": 0, "description": "Terraform module to deploy Elasticsearch to a nomad cluster", "source": "admintome/elasticsearch/nomad"}, "egarbi/alb-per-host/aws": {"name": "alb-per-host", "url": "https://registry.terraform.io/modules/egarbi/alb-per-host/aws", "provider": "aws", "downloads": 0, "description": "This create an internet-facing ALB with support to forward traffic based on host field in the HTTP header.", "source": "egarbi/alb-per-host/aws"}, "egarbi/public-ecs-service/aws": {"name": "public-ecs-service", "url": "https://registry.terraform.io/modules/egarbi/public-ecs-service/aws", "provider": "aws", "downloads": 0, "description": "", "source": "egarbi/public-ecs-service/aws"}, "bytebugs/aws-elasticsearch/moudles": {"name": "aws-elasticsearch", "url": "https://registry.terraform.io/modules/bytebugs/aws-elasticsearch/moudles", "provider": "moudles", "downloads": 0, "description": "", "source": "bytebugs/aws-elasticsearch/moudles"}, "azavea/emr-cluster/aws": {"name": "emr-cluster", "url": "https://registry.terraform.io/modules/azavea/emr-cluster/aws", "provider": "aws", "downloads": 0, "description": "A Terraform module to create an Amazon Web Services (AWS) Elastic MapReduce (EMR) cluster.", "source": "azavea/emr-cluster/aws"}, "DWSR/users/pagerduty": {"name": "users", "url": "https://registry.terraform.io/modules/DWSR/users/pagerduty", "provider": "pagerduty", "downloads": 0, "description": "A TF module that allows the declaration of all PagerDuty users. Does not support teams", "source": "DWSR/users/pagerduty"}, "kurron/ec2-spot/aws": {"name": "ec2-spot", "url": "https://registry.terraform.io/modules/kurron/ec2-spot/aws", "provider": "aws", "downloads": 0, "description": "Terraform module that requests an EC2 instance on the Spot market", "source": "kurron/ec2-spot/aws"}, "pyToshka/puppet/provisioner": {"name": "puppet", "url": "https://registry.terraform.io/modules/pyToshka/puppet/provisioner", "provider": "provisioner", "downloads": 0, "description": "Puppet provisioner for Terraform", "source": "pyToshka/puppet/provisioner"}, "pyToshka/puppet-masterless/provisioner": {"name": "puppet-masterless", "url": "https://registry.terraform.io/modules/pyToshka/puppet-masterless/provisioner", "provider": "provisioner", "downloads": 0, "description": "terraform puppet masterless provisioner ", "source": "pyToshka/puppet-masterless/provisioner"}, "pyToshka/kubernetes/cluster": {"name": "kubernetes", "url": "https://registry.terraform.io/modules/pyToshka/kubernetes/cluster", "provider": "cluster", "downloads": 0, "description": "", "source": "pyToshka/kubernetes/cluster"}, "cloudposse/datadog-integration/aws": {"name": "datadog-integration", "url": "https://registry.terraform.io/modules/cloudposse/datadog-integration/aws", "provider": "aws", "downloads": 0, "description": "Terraform Module for integration DataDog to AWS", "source": "cloudposse/datadog-integration/aws"}, "cloudposse/user-data-s3-backend/aws": {"name": "user-data-s3-backend", "url": "https://registry.terraform.io/modules/cloudposse/user-data-s3-backend/aws", "provider": "aws", "downloads": 0, "description": "Terraform Module to Offload User Data to S3", "source": "cloudposse/user-data-s3-backend/aws"}, "david-wells-1/cloudtrail/aws": {"name": "cloudtrail", "url": "https://registry.terraform.io/modules/david-wells-1/cloudtrail/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to create AWS CloudTrail with Alarms and SNS notification", "source": "david-wells-1/cloudtrail/aws"}, "klauern/provider/gitea": {"name": "provider", "url": "https://registry.terraform.io/modules/klauern/provider/gitea", "provider": "gitea", "downloads": 0, "description": "terraform provider for Gitea", "source": "klauern/provider/gitea"}, "klauern/provider/gogs": {"name": "provider", "url": "https://registry.terraform.io/modules/klauern/provider/gogs", "provider": "gogs", "downloads": 0, "description": "terraform provider for Gogs", "source": "klauern/provider/gogs"}, "joshdurbin/status-monitor-storage-and-api/network": {"name": "status-monitor-storage-and-api", "url": "https://registry.terraform.io/modules/joshdurbin/status-monitor-storage-and-api/network", "provider": "network", "downloads": 0, "description": "", "source": "joshdurbin/status-monitor-storage-and-api/network"}, "riboseinc/authenticating-secgroup/aws": {"name": "authenticating-secgroup", "url": "https://registry.terraform.io/modules/riboseinc/authenticating-secgroup/aws", "provider": "aws", "downloads": 0, "description": "Dynamically manage security group IPs through an authenticated HTTPS endpoint", "source": "riboseinc/authenticating-secgroup/aws"}, "cloudposse/monitor/datadog": {"name": "monitor", "url": "https://registry.terraform.io/modules/cloudposse/monitor/datadog", "provider": "datadog", "downloads": 0, "description": "Terraform module to provision Standard System Monitors (cpu, memory, swap, io, etc) in Datadog", "source": "cloudposse/monitor/datadog"}, "anugnes/availability-set/azure": {"name": "availability-set", "url": "https://registry.terraform.io/modules/anugnes/availability-set/azure", "provider": "azure", "downloads": 0, "description": "Azure Availability Set Module for Terraform", "source": "anugnes/availability-set/azure"}, "anugnes/resource-group/azure": {"name": "resource-group", "url": "https://registry.terraform.io/modules/anugnes/resource-group/azure", "provider": "azure", "downloads": 0, "description": "Azure Resource Group Module for Terraform", "source": "anugnes/resource-group/azure"}, "anugnes/storage-container/azure": {"name": "storage-container", "url": "https://registry.terraform.io/modules/anugnes/storage-container/azure", "provider": "azure", "downloads": 0, "description": "Azure Storage Container Module for Terraform", "source": "anugnes/storage-container/azure"}, "anugnes/virtual-machine/azure": {"name": "virtual-machine", "url": "https://registry.terraform.io/modules/anugnes/virtual-machine/azure", "provider": "azure", "downloads": 0, "description": "Azure Virtual Machine Module for Terraform", "source": "anugnes/virtual-machine/azure"}, "anugnes/virtual-network/azure": {"name": "virtual-network", "url": "https://registry.terraform.io/modules/anugnes/virtual-network/azure", "provider": "azure", "downloads": 0, "description": "Azure Virtual Network Module for Terraform", "source": "anugnes/virtual-network/azure"}, "confluentinc/s3/state": {"name": "s3", "url": "https://registry.terraform.io/modules/confluentinc/s3/state", "provider": "state", "downloads": 0, "description": "Terraform module to create the S3/DynamoDB backend to store the Terraform state+lock", "source": "confluentinc/s3/state"}, "sprutner/lambda-proxy/aws": {"name": "lambda-proxy", "url": "https://registry.terraform.io/modules/sprutner/lambda-proxy/aws", "provider": "aws", "downloads": 0, "description": "", "source": "sprutner/lambda-proxy/aws"}, "sprutner/lifecycle-hook-runner/aws": {"name": "lifecycle-hook-runner", "url": "https://registry.terraform.io/modules/sprutner/lifecycle-hook-runner/aws", "provider": "aws", "downloads": 0, "description": "", "source": "sprutner/lifecycle-hook-runner/aws"}, "netifi/proteus-router/aws": {"name": "proteus-router", "url": "https://registry.terraform.io/modules/netifi/proteus-router/aws", "provider": "aws", "downloads": 0, "description": "Rapidly deploy a Proteus Router", "source": "netifi/proteus-router/aws"}, "matti/kubernetes-node-pool/google": {"name": "kubernetes-node-pool", "url": "https://registry.terraform.io/modules/matti/kubernetes-node-pool/google", "provider": "google", "downloads": 0, "description": "", "source": "matti/kubernetes-node-pool/google"}, "ryanuber/elb/aws": {"name": "elb", "url": "https://registry.terraform.io/modules/ryanuber/elb/aws", "provider": "aws", "downloads": 0, "description": "Terraform module which creates ELB resources on AWS", "source": "ryanuber/elb/aws"}, "sidick/iam-ssl-certificate/aws": {"name": "iam-ssl-certificate", "url": "https://registry.terraform.io/modules/sidick/iam-ssl-certificate/aws", "provider": "aws", "downloads": 0, "description": "Terraform module which uploads an IAM Server Certificate", "source": "sidick/iam-ssl-certificate/aws"}, "techjacker/s3website/aws": {"name": "s3website", "url": "https://registry.terraform.io/modules/techjacker/s3website/aws", "provider": "aws", "downloads": 0, "description": "Terraform modules to create a static website hosted on AWS S3 and set up MX records", "source": "techjacker/s3website/aws"}, "Andrew-Klaas/simple/aws": {"name": "simple", "url": "https://registry.terraform.io/modules/Andrew-Klaas/simple/aws", "provider": "aws", "downloads": 0, "description": "Spins up simple ec2 instance", "source": "Andrew-Klaas/simple/aws"}, "npalm/dockercloud-swarm-role/aws": {"name": "dockercloud-swarm-role", "url": "https://registry.terraform.io/modules/npalm/dockercloud-swarm-role/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to create an AWS IAM role for Docker Cloud Swarm", "source": "npalm/dockercloud-swarm-role/aws"}, "rkarthik007/yugabyte/aws": {"name": "yugabyte", "url": "https://registry.terraform.io/modules/rkarthik007/yugabyte/aws", "provider": "aws", "downloads": 0, "description": "A Terraform module to deploy and run YugaByte on AWS.", "source": "rkarthik007/yugabyte/aws"}, "jainishshah17/artifactory/aws": {"name": "artifactory", "url": "https://registry.terraform.io/modules/jainishshah17/artifactory/aws", "provider": "aws", "downloads": 0, "description": "Terraform Template to deploy Artifactory Enterprise", "source": "jainishshah17/artifactory/aws"}, "matti/node-ignition/kontena": {"name": "node-ignition", "url": "https://registry.terraform.io/modules/matti/node-ignition/kontena", "provider": "kontena", "downloads": 0, "description": "", "source": "matti/node-ignition/kontena"}, "literalice/openshift/aws": {"name": "openshift", "url": "https://registry.terraform.io/modules/literalice/openshift/aws", "provider": "aws", "downloads": 0, "description": "Creates OpenShift Container Platform(OCP) or OpenShift Origin cluster", "source": "literalice/openshift/aws"}, "devtheops/staticsite/aws": {"name": "staticsite", "url": "https://registry.terraform.io/modules/devtheops/staticsite/aws", "provider": "aws", "downloads": 0, "description": "The Terraform module creates everything needed to make a static website", "source": "devtheops/staticsite/aws"}, "devops-workflow/users/datadog": {"name": "users", "url": "https://registry.terraform.io/modules/devops-workflow/users/datadog", "provider": "datadog", "downloads": 0, "description": "Terraform module to manage Datadog users", "source": "devops-workflow/users/datadog"}, "btower-labz/btlabz-vpc-ha-2x/aws": {"name": "btlabz-vpc-ha-2x", "url": "https://registry.terraform.io/modules/btower-labz/btlabz-vpc-ha-2x/aws", "provider": "aws", "downloads": 0, "description": "", "source": "btower-labz/btlabz-vpc-ha-2x/aws"}, "devops-workflow/datadog-integration/aws": {"name": "datadog-integration", "url": "https://registry.terraform.io/modules/devops-workflow/datadog-integration/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to manage AWS configuration for Datadog integration", "source": "devops-workflow/datadog-integration/aws"}, "plus3it/watchmaker/aws": {"name": "watchmaker", "url": "https://registry.terraform.io/modules/plus3it/watchmaker/aws", "provider": "aws", "downloads": 0, "description": "Terraform module for Watchmaker", "source": "plus3it/watchmaker/aws"}, "yopaproperty/Harpocrates/AWS": {"name": "Harpocrates", "url": "https://registry.terraform.io/modules/yopaproperty/Harpocrates/AWS", "provider": "AWS", "downloads": 0, "description": "Terraform module to easily deploy Chamber.", "source": "yopaproperty/Harpocrates/AWS"}, "matti/yaml/json": {"name": "yaml", "url": "https://registry.terraform.io/modules/matti/yaml/json", "provider": "json", "downloads": 0, "description": "", "source": "matti/yaml/json"}, "plus3it/s3-keys/external": {"name": "s3-keys", "url": "https://registry.terraform.io/modules/plus3it/s3-keys/external", "provider": "external", "downloads": 0, "description": "Terraform module that returns a list of object keys from an S3 bucket", "source": "plus3it/s3-keys/external"}, "plus3it/file-cache/external": {"name": "file-cache", "url": "https://registry.terraform.io/modules/plus3it/file-cache/external", "provider": "external", "downloads": 0, "description": "Terraform module to retrieve and cache files", "source": "plus3it/file-cache/external"}, "devops-workflow/users/pagerduty": {"name": "users", "url": "https://registry.terraform.io/modules/devops-workflow/users/pagerduty", "provider": "pagerduty", "downloads": 0, "description": "A TF module that allows the declaration of all PagerDuty users. Does not support teams", "source": "devops-workflow/users/pagerduty"}, "cloudposse/organization-access-role/aws": {"name": "organization-access-role", "url": "https://registry.terraform.io/modules/cloudposse/organization-access-role/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to create an IAM Role to grant permissions to delegated IAM users in the master account to access an invited member account", "source": "cloudposse/organization-access-role/aws"}, "cloudposse/organization-access-group/aws": {"name": "organization-access-group", "url": "https://registry.terraform.io/modules/cloudposse/organization-access-group/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to create an IAM Group and Policy to grant permissions to delegated IAM users in the Organization's master account to access a member account", "source": "cloudposse/organization-access-group/aws"}, "cloudposse/kops-metadata/aws": {"name": "kops-metadata", "url": "https://registry.terraform.io/modules/cloudposse/kops-metadata/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to lookup resources within a Kops cluster", "source": "cloudposse/kops-metadata/aws"}, "cloudposse/vpc-kops-peering/aws": {"name": "vpc-kops-peering", "url": "https://registry.terraform.io/modules/cloudposse/vpc-kops-peering/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to create a peering connection between a backing services VPC and a VPC created by Kops", "source": "cloudposse/vpc-kops-peering/aws"}, "devops-workflow/autoscaling/aws": {"name": "autoscaling", "url": "https://registry.terraform.io/modules/devops-workflow/autoscaling/aws", "provider": "aws", "downloads": 0, "description": "Terraform module which creates Auto Scaling resources on AWS", "source": "devops-workflow/autoscaling/aws"}, "cloudposse/cloudtrail-s3-bucket/aws": {"name": "cloudtrail-s3-bucket", "url": "https://registry.terraform.io/modules/cloudposse/cloudtrail-s3-bucket/aws", "provider": "aws", "downloads": 0, "description": "S3 bucket with built in IAM policy to allow CloudTrail logs", "source": "cloudposse/cloudtrail-s3-bucket/aws"}, "claque2000/tfbackend/aws": {"name": "tfbackend", "url": "https://registry.terraform.io/modules/claque2000/tfbackend/aws", "provider": "aws", "downloads": 0, "description": "A module to abstract s3 secured backend with dynamodb lock for Terraform", "source": "claque2000/tfbackend/aws"}, "khaliqgant/ecs/aws": {"name": "ecs", "url": "https://registry.terraform.io/modules/khaliqgant/ecs/aws", "provider": "aws", "downloads": 0, "description": "AWS specific terraform module for ECS", "source": "khaliqgant/ecs/aws"}, "sacloud/packet-filter/sakuracloud": {"name": "packet-filter", "url": "https://registry.terraform.io/modules/sacloud/packet-filter/sakuracloud", "provider": "sakuracloud", "downloads": 0, "description": "Terraform module for provisioning packet-filter", "source": "sacloud/packet-filter/sakuracloud"}, "cloudposse/kops-vpc-peering/aws": {"name": "kops-vpc-peering", "url": "https://registry.terraform.io/modules/cloudposse/kops-vpc-peering/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to create a peering connection between a backing services VPC and a VPC created by Kops", "source": "cloudposse/kops-vpc-peering/aws"}, "vexingcodes/s3-static-site/aws": {"name": "s3-static-site", "url": "https://registry.terraform.io/modules/vexingcodes/s3-static-site/aws", "provider": "aws", "downloads": 0, "description": "Creates a static website on a domain hosted on S3 and delivered by CloudFront over HTTPS with Route53 managing DNS.", "source": "vexingcodes/s3-static-site/aws"}, "chroto/serverless-react/aws": {"name": "serverless-react", "url": "https://registry.terraform.io/modules/chroto/serverless-react/aws", "provider": "aws", "downloads": 0, "description": "Terraform module which creates S3, CloudFront, and Route53 resources for hosting a React application", "source": "chroto/serverless-react/aws"}, "samstav/aws/mailgun": {"name": "aws", "url": "https://registry.terraform.io/modules/samstav/aws/mailgun", "provider": "mailgun", "downloads": 0, "description": "A Terraform module for creating a Mailgun domain, Route53 Zone, and corresponding DNS records", "source": "samstav/aws/mailgun"}, "cloudposse/kops-state-backend/aws": {"name": "kops-state-backend", "url": "https://registry.terraform.io/modules/cloudposse/kops-state-backend/aws", "provider": "aws", "downloads": 0, "description": "Easily bootstrap kops clusters (DNS & S3 Bucket)", "source": "cloudposse/kops-state-backend/aws"}, "traveloka/autoscaling/aws": {"name": "autoscaling", "url": "https://registry.terraform.io/modules/traveloka/autoscaling/aws", "provider": "aws", "downloads": 0, "description": "A terraform module which provisions an auto scaling group along with its launch configuration", "source": "traveloka/autoscaling/aws"}, "matti/config/pharos": {"name": "config", "url": "https://registry.terraform.io/modules/matti/config/pharos", "provider": "pharos", "downloads": 0, "description": "", "source": "matti/config/pharos"}, "cloudposse/kops-chart-repo/aws": {"name": "kops-chart-repo", "url": "https://registry.terraform.io/modules/cloudposse/kops-chart-repo/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to provision an S3 bucket for Helm chart repository, and an IAM role and policy with permissions for Kops nodes to access the bucket", "source": "cloudposse/kops-chart-repo/aws"}, "cloudposse/kops-external-dns/aws": {"name": "kops-external-dns", "url": "https://registry.terraform.io/modules/cloudposse/kops-external-dns/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to provision an IAM role for external-dns running in a Kops cluster, and attach an IAM policy to the role with permissions to modify Route53 record sets", "source": "cloudposse/kops-external-dns/aws"}, "cloudposse/kops-route53/aws": {"name": "kops-route53", "url": "https://registry.terraform.io/modules/cloudposse/kops-route53/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to lookup the IAM role associated with `kops` masters, and attach an IAM policy to the role with permissions to modify Route53 record sets", "source": "cloudposse/kops-route53/aws"}, "zoitech/alb/aws": {"name": "alb", "url": "https://registry.terraform.io/modules/zoitech/alb/aws", "provider": "aws", "downloads": 0, "description": "", "source": "zoitech/alb/aws"}, "techjacker/lambda-api-gateway/aws": {"name": "lambda-api-gateway", "url": "https://registry.terraform.io/modules/techjacker/lambda-api-gateway/aws", "provider": "aws", "downloads": 0, "description": "Terraform module which deploys a serverless HTTP endpoint backed by AWS Lambda & API Gateway", "source": "techjacker/lambda-api-gateway/aws"}, "sbogacz/website-automation-user/aws": {"name": "website-automation-user", "url": "https://registry.terraform.io/modules/sbogacz/website-automation-user/aws", "provider": "aws", "downloads": 0, "description": "A terraform module to create the necessary IAM resources for an automation user that will be updating S3 and CloudFront resources", "source": "sbogacz/website-automation-user/aws"}, "aliyun/concourse/alicloud": {"name": "concourse", "url": "https://registry.terraform.io/modules/aliyun/concourse/alicloud", "provider": "alicloud", "downloads": 0, "description": "Terraform module which deploys concourse application in a swarm cluster on Alibaba Cloud.", "source": "aliyun/concourse/alicloud"}, "aliyun/classic-load-balance/alicloud": {"name": "classic-load-balance", "url": "https://registry.terraform.io/modules/aliyun/classic-load-balance/alicloud", "provider": "alicloud", "downloads": 0, "description": "Terraform module which creates classic load balance application architecture on Alibaba Cloud.", "source": "aliyun/classic-load-balance/alicloud"}, "devops-workflow/team-members/pagerduty": {"name": "team-members", "url": "https://registry.terraform.io/modules/devops-workflow/team-members/pagerduty", "provider": "pagerduty", "downloads": 0, "description": "Terraform module to manage Pagerduty team membership", "source": "devops-workflow/team-members/pagerduty"}, "cloudposse/iam-chamber-user/aws": {"name": "iam-chamber-user", "url": "https://registry.terraform.io/modules/cloudposse/iam-chamber-user/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to provision a basic IAM chamber user with access to SSM parameters and KMS key to decrypt secrets, suitable for CI/CD systems (e.g. TravisCI, CircleCI, CodeFresh) or systems which are external to AWS that cannot leverage AWS IAM Instance Profiles", "source": "cloudposse/iam-chamber-user/aws"}, "cloudposse/ssh-key-pair/tls": {"name": "ssh-key-pair", "url": "https://registry.terraform.io/modules/cloudposse/ssh-key-pair/tls", "provider": "tls", "downloads": 0, "description": "Terraform module for generating an SSH public/private key file.", "source": "cloudposse/ssh-key-pair/tls"}, "cloudposse/iam-s3-user/aws": {"name": "iam-s3-user", "url": "https://registry.terraform.io/modules/cloudposse/iam-s3-user/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to provision a basic IAM user with permissions to access S3 resources, e.g. to give the user read/write/delete access to the objects in an S3 bucket", "source": "cloudposse/iam-s3-user/aws"}, "jonbrouse/module/sample": {"name": "module", "url": "https://registry.terraform.io/modules/jonbrouse/module/sample", "provider": "sample", "downloads": 0, "description": "Test module", "source": "jonbrouse/module/sample"}, "riboseinc/iam-authenticating-group/aws": {"name": "iam-authenticating-group", "url": "https://registry.terraform.io/modules/riboseinc/iam-authenticating-group/aws", "provider": "aws", "downloads": 0, "description": "Dynamically manage IAM group membership through an authenticated HTTPS endpoint", "source": "riboseinc/iam-authenticating-group/aws"}, "cloudposse/label/terraform": {"name": "label", "url": "https://registry.terraform.io/modules/cloudposse/label/terraform", "provider": "terraform", "downloads": 0, "description": "Terraform Module to define a consistent naming convention by (namespace, stage, name, [attributes])", "source": "cloudposse/label/terraform"}, "traveloka/bake-ami/aws": {"name": "bake-ami", "url": "https://registry.terraform.io/modules/traveloka/bake-ami/aws", "provider": "aws", "downloads": 0, "description": "A terraform module which provisions a CodePipeline + CodeBuild that will be use to bake application AMIs", "source": "traveloka/bake-ami/aws"}, "integr8/devops-vpc/aws": {"name": "devops-vpc", "url": "https://registry.terraform.io/modules/integr8/devops-vpc/aws", "provider": "aws", "downloads": 0, "description": "", "source": "integr8/devops-vpc/aws"}, "integr8/devops-selenium/aws": {"name": "devops-selenium", "url": "https://registry.terraform.io/modules/integr8/devops-selenium/aws", "provider": "aws", "downloads": 0, "description": "", "source": "integr8/devops-selenium/aws"}, "integr8/devops-nexus/aws": {"name": "devops-nexus", "url": "https://registry.terraform.io/modules/integr8/devops-nexus/aws", "provider": "aws", "downloads": 0, "description": "", "source": "integr8/devops-nexus/aws"}, "cloudposse/ssm-parameter-store/aws": {"name": "ssm-parameter-store", "url": "https://registry.terraform.io/modules/cloudposse/ssm-parameter-store/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to populate AWS Systems Manager (SSM) Parameter Store with values from Terraform. Works great with Chamber.", "source": "cloudposse/ssm-parameter-store/aws"}, "devops-workflow/budgets/aws": {"name": "budgets", "url": "https://registry.terraform.io/modules/devops-workflow/budgets/aws", "provider": "aws", "downloads": 0, "description": "Terraform module for configuring AWS budgets", "source": "devops-workflow/budgets/aws"}, "FredHutch/waf-alb/aws": {"name": "waf-alb", "url": "https://registry.terraform.io/modules/FredHutch/waf-alb/aws", "provider": "aws", "downloads": 0, "description": "Terraform module for AWS WAF ALB", "source": "FredHutch/waf-alb/aws"}, "azavea/ecr-repository/aws": {"name": "ecr-repository", "url": "https://registry.terraform.io/modules/azavea/ecr-repository/aws", "provider": "aws", "downloads": 0, "description": "A Terraform module to create an Amazon Web Services (AWS) Elastic Container Registry (ECR) repository.", "source": "azavea/ecr-repository/aws"}, "squidfunk/github-ci/aws": {"name": "github-ci", "url": "https://registry.terraform.io/modules/squidfunk/github-ci/aws", "provider": "aws", "downloads": 0, "description": "Serverless CI for GitHub using AWS CodeBuild with PR and status support", "source": "squidfunk/github-ci/aws"}, "aliyun/kubernetes/alicloud": {"name": "kubernetes", "url": "https://registry.terraform.io/modules/aliyun/kubernetes/alicloud", "provider": "alicloud", "downloads": 0, "description": "Terraform module which creates kubernetes(es) on Alibaba Cloud.", "source": "aliyun/kubernetes/alicloud"}, "aliyun/kubernetes-wordpress/alicloud": {"name": "kubernetes-wordpress", "url": "https://registry.terraform.io/modules/aliyun/kubernetes-wordpress/alicloud", "provider": "alicloud", "downloads": 0, "description": "Terraform module which deploys Wordpress and MySQL on Alibaba Cloud Kubernetes.", "source": "aliyun/kubernetes-wordpress/alicloud"}, "cloudposse/ecs-container-definition/aws": {"name": "ecs-container-definition", "url": "https://registry.terraform.io/modules/cloudposse/ecs-container-definition/aws", "provider": "aws", "downloads": 0, "description": "A Terraform module to generate well-formed JSON documents (container definitions) that are passed to the  aws_ecs_task_definition Terraform resource", "source": "cloudposse/ecs-container-definition/aws"}, "terraform-aws-modules/ebs-optimized/aws": {"name": "ebs-optimized", "url": "https://registry.terraform.io/modules/terraform-aws-modules/ebs-optimized/aws", "provider": "aws", "downloads": 0, "description": "A terraform module to determine if an instance can be flagged for EBS optimization.", "source": "terraform-aws-modules/ebs-optimized/aws"}, "squidfunk/api-gateway-enable-cors/aws": {"name": "api-gateway-enable-cors", "url": "https://registry.terraform.io/modules/squidfunk/api-gateway-enable-cors/aws", "provider": "aws", "downloads": 0, "description": "Easily add an OPTIONS method to an API Gateway resource to enable CORS", "source": "squidfunk/api-gateway-enable-cors/aws"}, "dwp/metric-filter-alarm/aws": {"name": "metric-filter-alarm", "url": "https://registry.terraform.io/modules/dwp/metric-filter-alarm/aws", "provider": "aws", "downloads": 0, "description": "Terraform module that creates AWS CloudWatch metric filters and alarms", "source": "dwp/metric-filter-alarm/aws"}, "cloudposse/ecs-alb-service-task/aws": {"name": "ecs-alb-service-task", "url": "https://registry.terraform.io/modules/cloudposse/ecs-alb-service-task/aws", "provider": "aws", "downloads": 0, "description": "A Terraform module which implements an ECS service which exposes a web service via ALB.", "source": "cloudposse/ecs-alb-service-task/aws"}, "cloudposse/ecs-codepipeline/aws": {"name": "ecs-codepipeline", "url": "https://registry.terraform.io/modules/cloudposse/ecs-codepipeline/aws", "provider": "aws", "downloads": 0, "description": "Terraform Module for CI/CD with AWS Code Pipeline and Code Build for ECS https://cloudposse.com/", "source": "cloudposse/ecs-codepipeline/aws"}, "mcapuccini/spark/openstack": {"name": "spark", "url": "https://registry.terraform.io/modules/mcapuccini/spark/openstack", "provider": "openstack", "downloads": 0, "description": "Terraform module to deploy Apache Spark.", "source": "mcapuccini/spark/openstack"}, "10thmagnitude/certs/private": {"name": "certs", "url": "https://registry.terraform.io/modules/10thmagnitude/certs/private", "provider": "private", "downloads": 0, "description": "Extracted submodule from Hashicorp/terraform-azurerm-vault", "source": "10thmagnitude/certs/private"}, "cloudposse/ssm-iam-role/aws": {"name": "ssm-iam-role", "url": "https://registry.terraform.io/modules/cloudposse/ssm-iam-role/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to provision an IAM role with configurable permissions to access SSM Parameter Store", "source": "cloudposse/ssm-iam-role/aws"}, "blinkist/airship-ecs-instance-draining/aws": {"name": "airship-ecs-instance-draining", "url": "https://registry.terraform.io/modules/blinkist/airship-ecs-instance-draining/aws", "provider": "aws", "downloads": 0, "description": "ECS scale-in draining module", "source": "blinkist/airship-ecs-instance-draining/aws"}, "cloudposse/lb-s3-bucket/aws": {"name": "lb-s3-bucket", "url": "https://registry.terraform.io/modules/cloudposse/lb-s3-bucket/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to provision an S3 bucket with built in IAM policy to allow AWS Load Balancers to ship access logs", "source": "cloudposse/lb-s3-bucket/aws"}, "cloudposse/alb/aws": {"name": "alb", "url": "https://registry.terraform.io/modules/cloudposse/alb/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to provision a standard ALB for HTTP/HTTP traffic", "source": "cloudposse/alb/aws"}, "cloudposse/alb-ingress/aws": {"name": "alb-ingress", "url": "https://registry.terraform.io/modules/cloudposse/alb-ingress/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to provision an HTTP style ingress rule based on hostname and path for an ALB", "source": "cloudposse/alb-ingress/aws"}, "terraformdns/route53-recordsets/aws": {"name": "route53-recordsets", "url": "https://registry.terraform.io/modules/terraformdns/route53-recordsets/aws", "provider": "aws", "downloads": 0, "description": "Terraform module for creating DNS recordsets in a Route53 zone", "source": "terraformdns/route53-recordsets/aws"}, "terraformdns/recordsets/dns": {"name": "recordsets", "url": "https://registry.terraform.io/modules/terraformdns/recordsets/dns", "provider": "dns", "downloads": 0, "description": "Terraform module for creating DNS recordsets using RFC 2136 dynamic updates", "source": "terraformdns/recordsets/dns"}, "terraformdns/dns-recordsets/dyn": {"name": "dns-recordsets", "url": "https://registry.terraform.io/modules/terraformdns/dns-recordsets/dyn", "provider": "dyn", "downloads": 0, "description": "Terraform module for creating DNS recordsets in a DNS zone hosted by Dyn", "source": "terraformdns/dns-recordsets/dyn"}, "terraformdns/dns-zonefile/template": {"name": "dns-zonefile", "url": "https://registry.terraform.io/modules/terraformdns/dns-zonefile/template", "provider": "template", "downloads": 0, "description": "Terraform module for formatting a DNS zonefile string", "source": "terraformdns/dns-zonefile/template"}, "telia-oss/terraform-init/aws": {"name": "terraform-init", "url": "https://registry.terraform.io/modules/telia-oss/terraform-init/aws", "provider": "aws", "downloads": 0, "description": "Initialise the terraform state bucket, lock table and encryption key.", "source": "telia-oss/terraform-init/aws"}, "telia-oss/ecs/aws": {"name": "ecs", "url": "https://registry.terraform.io/modules/telia-oss/ecs/aws", "provider": "aws", "downloads": 0, "description": "Collection of ECS modules for Terraform.", "source": "telia-oss/ecs/aws"}, "gyamada619/chocoserver/aws": {"name": "chocoserver", "url": "https://registry.terraform.io/modules/gyamada619/chocoserver/aws", "provider": "aws", "downloads": 0, "description": "A Terraform module to build a single EC2 instance used for Chocolately.Server.", "source": "gyamada619/chocoserver/aws"}, "cloudposse/ecs-web-app/aws": {"name": "ecs-web-app", "url": "https://registry.terraform.io/modules/cloudposse/ecs-web-app/aws", "provider": "aws", "downloads": 0, "description": "Terraform module that implements a web app on ECS and supporting AWS resources.", "source": "cloudposse/ecs-web-app/aws"}, "louislarry/spa/aws": {"name": "spa", "url": "https://registry.terraform.io/modules/louislarry/spa/aws", "provider": "aws", "downloads": 0, "description": "Build AWS infrastructure for SPA", "source": "louislarry/spa/aws"}, "plus3it/codecommit-flow-ci/aws": {"name": "codecommit-flow-ci", "url": "https://registry.terraform.io/modules/plus3it/codecommit-flow-ci/aws", "provider": "aws", "downloads": 0, "description": "Implement an event-based CI workflow on a CodeCommit repository", "source": "plus3it/codecommit-flow-ci/aws"}, "telia-oss/rds-instance/aws": {"name": "rds-instance", "url": "https://registry.terraform.io/modules/telia-oss/rds-instance/aws", "provider": "aws", "downloads": 0, "description": "RDS Instance module for Terraform", "source": "telia-oss/rds-instance/aws"}, "cloudposse/ssm-parameter-store-policy-documents/aws": {"name": "ssm-parameter-store-policy-documents", "url": "https://registry.terraform.io/modules/cloudposse/ssm-parameter-store-policy-documents/aws", "provider": "aws", "downloads": 0, "description": "A Terraform module that generates JSON documents for access for common AWS SSM Parameter Store policies", "source": "cloudposse/ssm-parameter-store-policy-documents/aws"}, "nozaq/secure-baseline/aws": {"name": "secure-baseline", "url": "https://registry.terraform.io/modules/nozaq/secure-baseline/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to set up your AWS account with the secure baseline configuration based on CIS Amazon Web Services Foundations.", "source": "nozaq/secure-baseline/aws"}, "nozaq/secure-vpc/aws": {"name": "secure-vpc", "url": "https://registry.terraform.io/modules/nozaq/secure-vpc/aws", "provider": "aws", "downloads": 0, "description": "A terraform module to create a VPC with secure default configurations.", "source": "nozaq/secure-vpc/aws"}, "GSLabDev/icp/module": {"name": "icp", "url": "https://registry.terraform.io/modules/GSLabDev/icp/module", "provider": "module", "downloads": 0, "description": "Terraform module for IBM Cloud Platform which is IBM's cloud orchestration platform. Module helps in doing installation of ICP in Distributed and Base mode.", "source": "GSLabDev/icp/module"}, "philips-software/bastion/aws": {"name": "bastion", "url": "https://registry.terraform.io/modules/philips-software/bastion/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to create an AWS bastion host", "source": "philips-software/bastion/aws"}, "rahulkhengare/redis/azurerm": {"name": "redis", "url": "https://registry.terraform.io/modules/rahulkhengare/redis/azurerm", "provider": "azurerm", "downloads": 0, "description": "Terraform Module for Azure Redis Service", "source": "rahulkhengare/redis/azurerm"}, "WesleyCharlesBlake/vault/aws": {"name": "vault", "url": "https://registry.terraform.io/modules/WesleyCharlesBlake/vault/aws", "provider": "aws", "downloads": 0, "description": "A Terraform Module for how to run Vault on AWS using Terraform and Packer", "source": "WesleyCharlesBlake/vault/aws"}, "WesleyCharlesBlake/eks/aws": {"name": "eks", "url": "https://registry.terraform.io/modules/WesleyCharlesBlake/eks/aws", "provider": "aws", "downloads": 0, "description": "Deploy a full EKS cluster with Terraform", "source": "WesleyCharlesBlake/eks/aws"}, "philips-software/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/philips-software/vpc/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to create an AWS VPC (public, or public and private)", "source": "philips-software/vpc/aws"}, "philips-software/ecs/aws": {"name": "ecs", "url": "https://registry.terraform.io/modules/philips-software/ecs/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to create an AWS ECS cluster", "source": "philips-software/ecs/aws"}, "philips-software/cloudwatch/aws": {"name": "cloudwatch", "url": "https://registry.terraform.io/modules/philips-software/cloudwatch/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to create an AWS Cloudwatch log group and config", "source": "philips-software/cloudwatch/aws"}, "philips-software/efs/aws": {"name": "efs", "url": "https://registry.terraform.io/modules/philips-software/efs/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to create an AWS elastic file system (EFS)", "source": "philips-software/efs/aws"}, "philips-software/rds/aws": {"name": "rds", "url": "https://registry.terraform.io/modules/philips-software/rds/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to create an AWS RDS instance", "source": "philips-software/rds/aws"}, "cloudposse/efs-cloudwatch-sns-alarms/aws": {"name": "efs-cloudwatch-sns-alarms", "url": "https://registry.terraform.io/modules/cloudposse/efs-cloudwatch-sns-alarms/aws", "provider": "aws", "downloads": 0, "description": "", "source": "cloudposse/efs-cloudwatch-sns-alarms/aws"}, "cloudposse/cloudtrail-cloudwatch-alarms/aws": {"name": "cloudtrail-cloudwatch-alarms", "url": "https://registry.terraform.io/modules/cloudposse/cloudtrail-cloudwatch-alarms/aws", "provider": "aws", "downloads": 0, "description": "Terraform module for creating alarms for tracking important changes and occurances from cloudtrail.", "source": "cloudposse/cloudtrail-cloudwatch-alarms/aws"}, "google-terraform-modules/cloudsql/google": {"name": "cloudsql", "url": "https://registry.terraform.io/modules/google-terraform-modules/cloudsql/google", "provider": "google", "downloads": 0, "description": "Create instance CloudSQL (GCP)", "source": "google-terraform-modules/cloudsql/google"}, "telia-oss/acm-certificate/aws": {"name": "acm-certificate", "url": "https://registry.terraform.io/modules/telia-oss/acm-certificate/aws", "provider": "aws", "downloads": 0, "description": "ACM Certificate with validation using Terraform.", "source": "telia-oss/acm-certificate/aws"}, "azavea/acm-certificate/aws": {"name": "acm-certificate", "url": "https://registry.terraform.io/modules/azavea/acm-certificate/aws", "provider": "aws", "downloads": 0, "description": "A Terraform module to create an Amazon Certificate Manager (ACM) certificate with Route 53 DNS validation.", "source": "azavea/acm-certificate/aws"}, "cloudposse/sns-lambda-notify-slack/aws": {"name": "sns-lambda-notify-slack", "url": "https://registry.terraform.io/modules/cloudposse/sns-lambda-notify-slack/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to provision a lambda function that subscribes to SNS and notifies to Slack.", "source": "cloudposse/sns-lambda-notify-slack/aws"}, "cloudposse/ecs-cloudwatch-sns-alarms/aws": {"name": "ecs-cloudwatch-sns-alarms", "url": "https://registry.terraform.io/modules/cloudposse/ecs-cloudwatch-sns-alarms/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to create CloudWatch Alarms on ECS Service level metrics.", "source": "cloudposse/ecs-cloudwatch-sns-alarms/aws"}, "ndejong/opnsense-cloud-image-builder/digitalocean": {"name": "opnsense-cloud-image-builder", "url": "https://registry.terraform.io/modules/ndejong/opnsense-cloud-image-builder/digitalocean", "provider": "digitalocean", "downloads": 0, "description": "Terraform module to create a Digital Ocean Droplet snapshot-image that can subsequently be used to start  an OPNsense instance within Digital Ocean.", "source": "ndejong/opnsense-cloud-image-builder/digitalocean"}, "philips-software/ecs-service/aws": {"name": "ecs-service", "url": "https://registry.terraform.io/modules/philips-software/ecs-service/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to create an AWS ECS service", "source": "philips-software/ecs-service/aws"}, "opencopilot/traefik/packet": {"name": "traefik", "url": "https://registry.terraform.io/modules/opencopilot/traefik/packet", "provider": "packet", "downloads": 0, "description": "Terraform module for running traefik on Packet with backends configured via device tags, and elastic IPs added automatically", "source": "opencopilot/traefik/packet"}}